{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"source/img/深入理解计算机系统/磁盘读取时间计算.PNG","path":"img/深入理解计算机系统/磁盘读取时间计算.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/信号处理程序被中断.PNG","path":"img/深入理解计算机系统/信号处理程序被中断.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/存储器层次结构.PNG","path":"img/深入理解计算机系统/存储器层次结构.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/浮点数舍入.PNG","path":"img/深入理解计算机系统/浮点数舍入.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/8.1事件处理.PNG","path":"img/深入理解计算机系统/8.1事件处理.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/6.1.1内存地址取值.PNG","path":"img/深入理解计算机系统/6.1.1内存地址取值.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/SRAM和DRAM对比.PNG","path":"img/深入理解计算机系统/SRAM和DRAM对比.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/set指令.PNG","path":"img/深入理解计算机系统/set指令.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/异常分类.PNG","path":"img/深入理解计算机系统/异常分类.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/异常分类2.PNG","path":"img/深入理解计算机系统/异常分类2.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/栈结构.PNG","path":"img/深入理解计算机系统/栈结构.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/算术和逻辑操作指令.PNG","path":"img/深入理解计算机系统/算术和逻辑操作指令.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/特殊的操作指令.PNG","path":"img/深入理解计算机系统/特殊的操作指令.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/浮点数标准分类.PNG","path":"img/深入理解计算机系统/浮点数标准分类.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/浮点数规格化的值.PNG","path":"img/深入理解计算机系统/浮点数规格化的值.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/进程地址空间.PNG","path":"img/深入理解计算机系统/进程地址空间.PNG","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/补码的非.jpg","path":"img/深入理解计算机系统/补码的非.jpg","modified":0,"renderable":0},{"_id":"source/img/深入理解计算机系统/补码加法.jpg","path":"img/深入理解计算机系统/补码加法.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"8d0d831a77fe92a9e1530366ed90dec6d73d3aef","modified":1550977740362},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1551768129678},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1551768129678},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1551768129678},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1551768129678},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1551768129678},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1551768129678},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1551768129678},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1551768129678},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1551768129678},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1551768129694},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1551768129694},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1551768129694},{"_id":"themes/next/_config.yml","hash":"4ec55021d557dbd47097921a9febee08c3dc57ab","modified":1551768561989},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1551768129694},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1551768129694},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1551768129764},{"_id":"source/about/index.md","hash":"ed1dd1c58371cbcb24ad03414991b02fa7ae6b8d","modified":1550977740377},{"_id":"source/_posts/深入理解计算机系统.md","hash":"88acc7bcc26b96200c7b5981cbaa9a80a3bf17cf","modified":1551769526609},{"_id":"source/archives/index.md","hash":"a9f0b3e5433bcb0efff2faa5709ab44da3bfd146","modified":1550977740377},{"_id":"source/img/avatar.jpg","hash":"49cfa597392c4a116584c07690efbbc06354acc7","modified":1550977740393},{"_id":"source/img/favicon.ico","hash":"a8ee7712f6560180efccb68546de6ea0d937fff3","modified":1550977740393},{"_id":"source/img/icon_wechat.png","hash":"7fdb00c9017236e05c1b3e6da38a2cc382fd69fa","modified":1550977740393},{"_id":"source/tags/index.md","hash":"bc710b5b8db6f01940957ce744a37fd564752c3b","modified":1550977740393},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1551768129663},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1551768098756},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1551768129663},{"_id":"themes/next/.git/index","hash":"390596f7150c4f035cb3444024fc33798584cf5c","modified":1551768129976},{"_id":"themes/next/.git/packed-refs","hash":"69237944e31c16fe545d1f47b0b1e5b1d99660da","modified":1551768129647},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1551768129678},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1551768129678},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1551768129678},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1551768129678},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1551768129694},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1551768129694},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1551768129694},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1551768129694},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1551768129694},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1551768129694},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1551768129694},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1551768129694},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1551768129694},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1551768129694},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1551768129694},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1551768129694},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1551768129694},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1551768129694},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1551768129694},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1551768129694},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1551768129710},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1551768129749},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1551768129749},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1551768129749},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1551768129749},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1551768129749},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1551768129749},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1551768129749},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1551768129764},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1551768129764},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1551768129976},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1551768129976},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1551768129976},{"_id":"source/img/tag-bg.jpg","hash":"8844274a812ae19e8f2a3b7e4e465342e63eb852","modified":1550977740393},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551768129858},{"_id":"source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1550977740393},{"_id":"source/img/home-bg-o.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1550977740393},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1551768098756},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1551768098756},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1551768098756},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1551768098756},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1551768098756},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1551768098756},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1551768098756},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1551768098756},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1551768098756},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1551768098756},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1551768098771},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1551768098771},{"_id":"themes/next/.git/logs/HEAD","hash":"1d745e08898c10b9e457bb3afbd9736ecd11382b","modified":1551768129663},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1551768129710},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1551768129710},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1551768129710},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1551768129710},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1551768129710},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1551768129710},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1551768129710},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1551768129710},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1551768129710},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1551768129710},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1551768129710},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1551768129710},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1551768129710},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1551768129710},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1551768129710},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1551768129725},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1551768129725},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1551768129725},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1551768129749},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1551768129749},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1551768129749},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1551768129749},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1551768129749},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1551768129749},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1551768129749},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1551768129764},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1551768129764},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1551768129764},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1551768129764},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1551768129764},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1551768129764},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1551768129764},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1551768129764},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1551768129764},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1551768129843},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1551768129858},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1551768129858},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1551768129858},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1551768129858},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1551768129858},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1551768129858},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1551768129858},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1551768129858},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1551768129858},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1551768129858},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1551768129858},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1551768129858},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551768129858},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1551768129858},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551768129858},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1551768129858},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1551768129858},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1551768129858},{"_id":"source/img/home-bg.jpg","hash":"a191201c3a98728e6ea66d6827df827ecfcc9d33","modified":1550977740393},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551768129725},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551768129725},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551768129827},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551768129827},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551768129827},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551768129843},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551768129843},{"_id":"source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1550977740393},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1551768129663},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1551768129710},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1551768129710},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1551768129710},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1551768129710},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1551768129710},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1551768129725},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1551768129725},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1551768129725},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1551768129725},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1551768129725},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1551768129725},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1551768129725},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1551768129725},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1551768129725},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1551768129725},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1551768129725},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1551768129725},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1551768129725},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1551768129725},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1551768129725},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1551768129741},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1551768129741},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1551768129741},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1551768129741},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1551768129741},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1551768129741},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1551768129741},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1551768129741},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1551768129741},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1551768129741},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1551768129741},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1551768129749},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1551768129749},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1551768129749},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1551768129749},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1551768129749},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1551768129749},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1551768129749},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1551768129827},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1551768129827},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1551768129827},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1551768129827},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1551768129843},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1551768129843},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1551768129843},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1551768129843},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1551768129858},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1551768129858},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1551768129874},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1551768129874},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1551768129874},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1551768129874},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1551768129874},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1551768129858},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1551768129874},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1551768129874},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1551768129874},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1551768129889},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1551768129889},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1551768129889},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1551768129910},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1551768129910},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1551768129914},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1551768129914},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1551768129919},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1551768129919},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1551768129919},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1551768129919},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1551768129919},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1551768129929},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1551768129929},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1551768129929},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1551768129944},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1551768129944},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1551768129944},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1551768129944},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1551768129944},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1551768129944},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1551768129944},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1551768129944},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1551768129960},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1551768129960},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1551768129960},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1551768129960},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1551768129960},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1551768129960},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1551768129960},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1551768129976},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1551768129929},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"1d745e08898c10b9e457bb3afbd9736ecd11382b","modified":1551768129663},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1551768129647},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1551768129749},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1551768129749},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1551768129764},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1551768129764},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1551768129764},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1551768129764},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1551768129764},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1551768129796},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1551768129811},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1551768129811},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1551768129811},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1551768129811},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1551768129827},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1551768129827},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1551768129811},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1551768129843},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1551768129843},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1551768129874},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1551768129874},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1551768129874},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1551768129910},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1551768129910},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1551768129910},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1551768129914},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1551768129914},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1551768129919},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1551768129919},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1551768129919},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1551768129960},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1551768129960},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1551768129929},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1551768129929},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1551768129960},{"_id":"source/img/about-bg.jpg","hash":"b5814b2d10eb38dfda0072365567f3823bc34aba","modified":1550977740393},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"1d745e08898c10b9e457bb3afbd9736ecd11382b","modified":1551768129647},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1551768129764},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1551768129780},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1551768129796},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1551768129811},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1551768129811},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1551768129827},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1551768129843},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1551768129874},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1551768129874},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1551768129874},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1551768129874},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1551768129874},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1551768129874},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1551768129889},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1551768129905},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1551768129906},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1551768129906},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1551768129906},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1551768129919},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1551768129929},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1551768129929},{"_id":"themes/next/.git/objects/pack/pack-17a4bee8f29540da57cd464efc36b18a63c11091.idx","hash":"2651a8f782fa1f6b3f4e746be5325bc53abc9e00","modified":1551768129585},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1551768129889},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1551768129929},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1551768129960},{"_id":"themes/next/.git/objects/pack/pack-17a4bee8f29540da57cd464efc36b18a63c11091.pack","hash":"31689539b2c20f31c6504fe7cc989966fb2b4e03","modified":1551768129569},{"_id":"source/img/深入理解计算机系统/磁盘读取时间计算.PNG","hash":"961f9811f7e87f901aafbbe7dcce9540e845452f","modified":1543995794142},{"_id":"source/img/深入理解计算机系统/信号处理程序被中断.PNG","hash":"b8d5716226f64a220914c48a75e5397c367bd132","modified":1544796644232},{"_id":"source/img/深入理解计算机系统/存储器层次结构.PNG","hash":"dfff26cbcc2184c78b506f59374087189b4144a4","modified":1543491686499},{"_id":"source/img/深入理解计算机系统/浮点数舍入.PNG","hash":"ab6db20e3b3859e17aaad66d7d01204447143611","modified":1542790108412},{"_id":"source/img/深入理解计算机系统/8.1事件处理.PNG","hash":"384ecfbc47d70a1e765ac06b6746a96125848f30","modified":1543457671156},{"_id":"source/img/深入理解计算机系统/6.1.1内存地址取值.PNG","hash":"6fc29016b4f6f86b01d9717c300f00929ed0df7e","modified":1543461895135},{"_id":"source/img/深入理解计算机系统/SRAM和DRAM对比.PNG","hash":"fbdc048b712161a07712459483ca38cc2d0cbcae","modified":1543458967149},{"_id":"source/img/深入理解计算机系统/set指令.PNG","hash":"82acf2ebbb9ac4ded80acf235c68354ba2ef0669","modified":1543234265561},{"_id":"source/img/深入理解计算机系统/异常分类.PNG","hash":"5df9edc777b72d4d5ceee6214a4411452ea05cdf","modified":1544704475537},{"_id":"source/img/深入理解计算机系统/异常分类2.PNG","hash":"b2f6a60a908b8170e54dee16169f4cf39130b108","modified":1544704555191},{"_id":"source/img/深入理解计算机系统/栈结构.PNG","hash":"0b93110b8e601d16eba62cbe7a248830b0293916","modified":1543317822864},{"_id":"source/img/深入理解计算机系统/算术和逻辑操作指令.PNG","hash":"b19cae0bbf9131b8bf610609dfc8dc2708406aec","modified":1542874851207},{"_id":"source/img/深入理解计算机系统/特殊的操作指令.PNG","hash":"1d30c2d6a99fc945477d7413889bca5d266097aa","modified":1542876954972},{"_id":"source/img/深入理解计算机系统/浮点数标准分类.PNG","hash":"4e3bf7d66d2fc81f0a3c19a24e5d92b8e0221fda","modified":1542786790327},{"_id":"source/img/深入理解计算机系统/浮点数规格化的值.PNG","hash":"ab71d12d791a4aaec0423dcf31e0a6d728a95c01","modified":1542786985841},{"_id":"source/img/深入理解计算机系统/进程地址空间.PNG","hash":"66f40ecd1f2987980bfdb12b1084f379df6ef336","modified":1544706670826},{"_id":"source/img/深入理解计算机系统/补码的非.jpg","hash":"7a48a72899fc9ba4624919e62e086ff4d53f6830","modified":1541913757076},{"_id":"source/img/深入理解计算机系统/补码加法.jpg","hash":"30c51d859eccb80369912ba5a3af84a28947c453","modified":1541911729079}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2019-02-24T03:19:45.475Z","updated":"2019-02-24T03:09:00.362Z","path":"404.html","title":"","comments":1,"_id":"cjsvfd8660000hwu3snzmlgg2","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","date":"2016-04-20T20:48:33.000Z","description":"Hey, this is Kaijun.","header-img":"img/about-bg.jpg","comments":1,"_content":"\n\n>写写代码，做做设计，看看产品。\n>世界那么大，多玩玩看看。\n\n9月21日上午，阳光明媚，鲜花斗艳。帕洛阿尔托苹果店里欢声笑语，人头攒动。苹果公司首席执行官蒂姆·库克先生在店长欧阳猛南陪同下，不远千米，深入到一线店面，为那里的员工带去节曰的问候和良好的祝愿。<br><br>“果粉们，你们辛苦了，我代表某果公司，祝你们身体健康，生活幸福，工作成功！”库克亲切慰问广大员工和顾客，并就iOS7、iPhone 5S和iPhone 5C的销售状况进行调研。 <br><br>“您现在每月工资有多少？肾5S拿到了吗？”在店里，库克关切地向果粉们问起这一问题。当听说果粉们排到了5S，库克满意地连连点头。接着他指出，近年来苹果事业发展取得巨大成就，特别是iPhone影响剧增，老百姓对iOS满意度逐步提高，在这个转变过程中，果粉的辛勤工作功不可没。<br><br>库克看到一个中国小朋友在排队买iPhone 5S，亲切的问：“5288元一台能承受不？”小朋友回答到：“能！”当得知这位小朋友卖了一个肾来买iPhone 5S时，库克叮嘱道：“在支持苹果的同时，也要爱护身体。”<br><br>库克与购买苹果手机的果粉们兴致勃勃地参观了苹果专卖店，和员工们拉了拉家常，并饶有兴趣地玩了四盘切西瓜游戏，与普通员工同乐。<br><br>在交谈中，库克多次关心地强调：“有了iPhone 5C，就不卖iPhone 5了。”并对顾客说：“好好休息，身体是革命的本钱嘛！”会谈始终在亲切友好的气氛中进行。<br><br>顾客们就库克的讲话达成了广泛的共识，并承认世界上只有iOS最流畅，要紧紧的团结在以库克先生为首席执行官的苹果公司集体周围，一心一意抓学习，聚精会神谋发展。<br>\n<br>帕洛阿尔托苹果专卖店当日原则通过《蒂姆·库克首席执行官在加州新苹果店的讲话纪要》，并下发各分店认真学习、研讨。\n\n<p style=\"text-align:right;\">\n    —— <a href=\"http://www.zhihu.com/question/19687065\">李书航 － 什么是「共产中文腔调」？ </a>\n</p>","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2016-04-21 04:48:33\ndescription: \"Hey, this is Kaijun.\"\nheader-img: \"img/about-bg.jpg\"\ncomments: true\n---\n\n\n>写写代码，做做设计，看看产品。\n>世界那么大，多玩玩看看。\n\n9月21日上午，阳光明媚，鲜花斗艳。帕洛阿尔托苹果店里欢声笑语，人头攒动。苹果公司首席执行官蒂姆·库克先生在店长欧阳猛南陪同下，不远千米，深入到一线店面，为那里的员工带去节曰的问候和良好的祝愿。<br><br>“果粉们，你们辛苦了，我代表某果公司，祝你们身体健康，生活幸福，工作成功！”库克亲切慰问广大员工和顾客，并就iOS7、iPhone 5S和iPhone 5C的销售状况进行调研。 <br><br>“您现在每月工资有多少？肾5S拿到了吗？”在店里，库克关切地向果粉们问起这一问题。当听说果粉们排到了5S，库克满意地连连点头。接着他指出，近年来苹果事业发展取得巨大成就，特别是iPhone影响剧增，老百姓对iOS满意度逐步提高，在这个转变过程中，果粉的辛勤工作功不可没。<br><br>库克看到一个中国小朋友在排队买iPhone 5S，亲切的问：“5288元一台能承受不？”小朋友回答到：“能！”当得知这位小朋友卖了一个肾来买iPhone 5S时，库克叮嘱道：“在支持苹果的同时，也要爱护身体。”<br><br>库克与购买苹果手机的果粉们兴致勃勃地参观了苹果专卖店，和员工们拉了拉家常，并饶有兴趣地玩了四盘切西瓜游戏，与普通员工同乐。<br><br>在交谈中，库克多次关心地强调：“有了iPhone 5C，就不卖iPhone 5了。”并对顾客说：“好好休息，身体是革命的本钱嘛！”会谈始终在亲切友好的气氛中进行。<br><br>顾客们就库克的讲话达成了广泛的共识，并承认世界上只有iOS最流畅，要紧紧的团结在以库克先生为首席执行官的苹果公司集体周围，一心一意抓学习，聚精会神谋发展。<br>\n<br>帕洛阿尔托苹果专卖店当日原则通过《蒂姆·库克首席执行官在加州新苹果店的讲话纪要》，并下发各分店认真学习、研讨。\n\n<p style=\"text-align:right;\">\n    —— <a href=\"http://www.zhihu.com/question/19687065\">李书航 － 什么是「共产中文腔调」？ </a>\n</p>","updated":"2019-02-24T03:09:00.377Z","path":"about/index.html","_id":"cjsvfd8d50001hwu32o4djefx","content":"<blockquote>\n<p>写写代码，做做设计，看看产品。<br>世界那么大，多玩玩看看。</p>\n</blockquote>\n<p>9月21日上午，阳光明媚，鲜花斗艳。帕洛阿尔托苹果店里欢声笑语，人头攒动。苹果公司首席执行官蒂姆·库克先生在店长欧阳猛南陪同下，不远千米，深入到一线店面，为那里的员工带去节曰的问候和良好的祝愿。<br><br>“果粉们，你们辛苦了，我代表某果公司，祝你们身体健康，生活幸福，工作成功！”库克亲切慰问广大员工和顾客，并就iOS7、iPhone 5S和iPhone 5C的销售状况进行调研。 <br><br>“您现在每月工资有多少？肾5S拿到了吗？”在店里，库克关切地向果粉们问起这一问题。当听说果粉们排到了5S，库克满意地连连点头。接着他指出，近年来苹果事业发展取得巨大成就，特别是iPhone影响剧增，老百姓对iOS满意度逐步提高，在这个转变过程中，果粉的辛勤工作功不可没。<br><br>库克看到一个中国小朋友在排队买iPhone 5S，亲切的问：“5288元一台能承受不？”小朋友回答到：“能！”当得知这位小朋友卖了一个肾来买iPhone 5S时，库克叮嘱道：“在支持苹果的同时，也要爱护身体。”<br><br>库克与购买苹果手机的果粉们兴致勃勃地参观了苹果专卖店，和员工们拉了拉家常，并饶有兴趣地玩了四盘切西瓜游戏，与普通员工同乐。<br><br>在交谈中，库克多次关心地强调：“有了iPhone 5C，就不卖iPhone 5了。”并对顾客说：“好好休息，身体是革命的本钱嘛！”会谈始终在亲切友好的气氛中进行。<br><br>顾客们就库克的讲话达成了广泛的共识，并承认世界上只有iOS最流畅，要紧紧的团结在以库克先生为首席执行官的苹果公司集体周围，一心一意抓学习，聚精会神谋发展。<br><br><br>帕洛阿尔托苹果专卖店当日原则通过《蒂姆·库克首席执行官在加州新苹果店的讲话纪要》，并下发各分店认真学习、研讨。</p>\n<p style=\"text-align:right;\"><br>    —— <a href=\"http://www.zhihu.com/question/19687065\" target=\"_blank\" rel=\"noopener\">李书航 － 什么是「共产中文腔调」？ </a><br></p>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>写写代码，做做设计，看看产品。<br>世界那么大，多玩玩看看。</p>\n</blockquote>\n<p>9月21日上午，阳光明媚，鲜花斗艳。帕洛阿尔托苹果店里欢声笑语，人头攒动。苹果公司首席执行官蒂姆·库克先生在店长欧阳猛南陪同下，不远千米，深入到一线店面，为那里的员工带去节曰的问候和良好的祝愿。<br><br>“果粉们，你们辛苦了，我代表某果公司，祝你们身体健康，生活幸福，工作成功！”库克亲切慰问广大员工和顾客，并就iOS7、iPhone 5S和iPhone 5C的销售状况进行调研。 <br><br>“您现在每月工资有多少？肾5S拿到了吗？”在店里，库克关切地向果粉们问起这一问题。当听说果粉们排到了5S，库克满意地连连点头。接着他指出，近年来苹果事业发展取得巨大成就，特别是iPhone影响剧增，老百姓对iOS满意度逐步提高，在这个转变过程中，果粉的辛勤工作功不可没。<br><br>库克看到一个中国小朋友在排队买iPhone 5S，亲切的问：“5288元一台能承受不？”小朋友回答到：“能！”当得知这位小朋友卖了一个肾来买iPhone 5S时，库克叮嘱道：“在支持苹果的同时，也要爱护身体。”<br><br>库克与购买苹果手机的果粉们兴致勃勃地参观了苹果专卖店，和员工们拉了拉家常，并饶有兴趣地玩了四盘切西瓜游戏，与普通员工同乐。<br><br>在交谈中，库克多次关心地强调：“有了iPhone 5C，就不卖iPhone 5了。”并对顾客说：“好好休息，身体是革命的本钱嘛！”会谈始终在亲切友好的气氛中进行。<br><br>顾客们就库克的讲话达成了广泛的共识，并承认世界上只有iOS最流畅，要紧紧的团结在以库克先生为首席执行官的苹果公司集体周围，一心一意抓学习，聚精会神谋发展。<br><br><br>帕洛阿尔托苹果专卖店当日原则通过《蒂姆·库克首席执行官在加州新苹果店的讲话纪要》，并下发各分店认真学习、研讨。</p>\n<p style=\"text-align:right;\"><br>    —— <a href=\"http://www.zhihu.com/question/19687065\" target=\"_blank\" rel=\"noopener\">李书航 － 什么是「共产中文腔调」？ </a><br></p>"},{"layout":"archives","title":"Archives","description":"Hey, this is Archives.","header-img":"img/tag-bg.jpg","_content":"","source":"archives/index.md","raw":"---\nlayout: \"archives\"\ntitle: \"Archives\"\ndescription: \"Hey, this is Archives.\"\nheader-img: \"img/tag-bg.jpg\"\n---\n","date":"2019-02-24T03:09:00.377Z","updated":"2019-02-24T03:09:00.377Z","path":"archives/index.html","comments":1,"_id":"cjsvfd8d60002hwu36x5m6aq3","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","header-img":"img/tag-bg.jpg","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\nheader-img: \"img/tag-bg.jpg\"\n---\n","date":"2019-02-24T03:09:00.393Z","updated":"2019-02-24T03:09:00.393Z","path":"tags/index.html","comments":1,"_id":"cjsvfd8d90003hwu3n4wod28q","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"哈尔滨工业大学计算机系统2018年秋期末复习","urlname":"hit_data_structure_review","mathjax":true,"description":"一直想拥有一个自己的博客，但是却一拖再拖，始终没有推送一篇博文，仅以此篇--哈尔滨工业大学计算机系统的复习提纲，仅为期末复习所准备，慰藉以往无bolg的时光。","abbrlink":22353,"date":"2019-03-05T06:00:00.000Z","_content":"\n\n- 计算机的字长，是指针数据的位长，表明了虚拟地址空间的大小\n\n- ASCII字符构成的文件成为文本文件，其他所有文件都称为二进制文件\n\n- 核心PC模型由指令集架构决定，操作围绕主存、寄存器文件、算术/逻辑单元ALU进行，进行加载、存储、操作、跳转等操作。\n\n- 存储器层次结构的基本思想：上一层的存储器作为第一层存储器的高速缓存\n\n- 操作系统的基本功能：1：防止硬件被失控 的应用程序滥用；2：向应用程序提供简单一致的机制来控制复杂而通常大而不同的低级硬件设备。 \n\n### 信息的表示和处理\n\n#### 信息存储\n\n- 信息：\n\n```\n数值：值   小数点  符号（三要素）\n\n非数值：文字 图像 视频 语言\n```\n\n- 软件：\n\n  ```\n  系统软件：（用来管理整个计算机系统）\n  \n  语言处理程序  操作系统  服务型程序 数据\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t库管理系统 网络软件\n  ```\n\n- 计算机系统的层次结构：\n\n| 高级语言          | 虚拟机器M3   |\n| ----------------- | ------------ |\n| 汇编语言          | 虚拟机器M2   |\n| 操作系统          | 虚拟机器     |\n| 机器语言          | 实际机器M1   |\n| 微指令语言（时间) | 微程序机器M0 |\n- 机器数（码）：原码 反码 移码  补码\n\n- 数的逻辑：逻辑   算术（+ - * /） c语言中的数\n\n- 逻辑运算符&&和||与对应的位级运算符&和|第二个区别：\n\n  如果对第一个参数求值就能确定表达式的结果，那么逻辑运算符就不会对第二个参数求值。例如：a&&5/a不会造成被零除，p&&*p++不会导致间接引用空指针 \n\n- 集合的表示与运算\n\n  - 表示：位向量表示有限集合\n\n```\neg：10100110   从右到左表示 该集合={1，2，5，7}\n```\n\n- 运算：& 交集     |  并集    ^  对称差集    ~  补集                  \n\n- 左移补0，但右移分为逻辑右移和算术右移，逻辑右移左端补0，算术右移左端补最高有效位的值。c语言对此没有区分，但大多数编译器对有符号数使用算术右移；无符号数右移必须是逻辑的 。Java对右移有明确的规定，x>>k表示x算术右移k个位置，x>>>k表示逻辑右移\n\n#### 整数表示\n\n##### 整数编码\n\n有符号数：补码\n\nB2T(X) = $-X_{w-1}2^{w-1}+\\sum_{i=0}^{w-2}X_i2_i$\n\n例：\n\n|      | 10进制 | 16进制 | 2进制                             |\n| ---- | ------ | ------ | --------------------------------- |\n| X    | 15213  | 3B 6D  | 0011011 01101101                  |\n| Y    | -15213 | C4 93  | 1100100 10010011(最高位1表示负数) |\n\n\n|      | 原码       | 反码      | 补码      |\n| ---- | ---------- | --------- | --------- |\n| 11   | 0000 1011  | 0000 1011 | 0000 1011 |\n| -11  | 1000  1011 | 1111 0100 | 1111 0101 |\n\n注:负数的补码为反码加1,  正数的 原码、反码、补码都相同\n\n##### 知识细节\n\n- 有符号数同一表示形式下，负数的表示范围 比正数的范围大1  \n\n  同一位数：补码的范围不对称，|TMin|=|TMax|+1；                                                                                                                        \t  \t同一位数：最大的无符号数比有符号数的两倍多1，即：UMax = 2TMax + 1​\t\t\t\t\n\n- 对于大多数C语言，处理同样字长的有符号数和无符号数规则：数值可能改变，但位模式不变\n\n​\teg：short v = -12345;    unsigned short  uv = (unsigned short) v;     uv=53191  这里-12345的16位补码和53191的16位编码相同\n\n​\t无符号数和有符号数之间的转换规则：T-->U:补码转化为无符号数       U-->T:无符号数转化为补码\n\n​\t参与运算时，如果有无符号数出现在同一表达式，则有符号数强制转化为无符号数​\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\n- 扩展一个数字的位表示：无符号数零扩展，补码数(有符号数)符号扩展​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n- 截断无符号数：丢弃高位取地位；  截断有符号数：截断后将最高位转化为符号位​\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n#### 整数运算\n\n##### 有符号数和无符号数转换的基本原则：\n\n```\n-位模式不变\n\n-重新解读（按目标编码类型的规则解读）\n\n-会有意外的副作用：数值被 + 或 -$2^w$\n\n-当表达式中有符号数和无符号数混合时，有符号数转化为无符号数\n```\n\n加法:\t无/有符号数的加法：正常加法后再截断，位级的运算相同\n\n​\t\t无符号数：加后对$2^w$求模\n\n##### 符号位扩展\n\n```\n-无符号数：填充0\n\n-有符号位：符号扩展\n\n\t\t\teg：-15213    二进制：11000100 10010011  ---> 11111111 11111111 11000100 10010011\n\n-结果都是明确的预期值\n```\n\n##### 截断\n\n```\n-无论有无符号数，多出的位数都被截断\n\n-结果重新解读\n\n-无符号数: 相当于求模运算\n\n-有符号数：和求模运算相似\n```\n\n​\t-对于小整数，结果是明确的预期值\n\n##### 检测无符号数加法中的溢出：\n\n​\ts =x+y,当且仅当s < x(或等价的s < y)时发生了溢出\n\n​\t无符号数逆元（求反）：x=0时：-x=0\n\n​\t\t\t\t   x > 0时: -x = $2^w$\n\n##### 补码加法：\n\n对于-$2^{w-1}\\le,y\\le2^{w-1}$-1的整数x和y，有\n$$\n\\begin{equation}x+^t_wy=\\begin{cases}x+y-2^w& 2^{w-1}\\le{x+y} & 正溢出\\\\x+y & -2^{w-1}\\le{x+y}<2^{w-1} & 正常\\\\x+y+2^w & x+y<-2^{w-1} & 负溢出\\end{cases}\\end{equation}\n$$\n​     对于满足TMi$n_w\\le$x,y$\\le$TMax$_w$的和y，令s=x+y,当且仅当x > 0,y > 0但s$\\le$0时发生了正溢出；当且仅当x < 0,y < 0但s$\\geq$0时发生了正溢出  \n\n##### 补码的非                                                                                    \n\n对满足$TMin_w\\le x\\le TMax_w$\t的$x$，其补码的非$-^t_wx$由下式给出：\n$$\n\\begin{equation}-^t_wx=\\begin{cases}TMin_w& x = TMin_w\\\\-x & x>TMin_w\\end{cases}\\end{equation}\n$$\n也就是说，对w位的补码加法来说，$TMin_w$是自己的加法的逆，而对其他的都有$-x$作为其加法的逆\n\n##### 补码非的位级表示\n\n​\t方法一：对每一位求补，再对结果加1\n\n​\t方法二：找到最右边的第一个1的位置，然后将该位置左边的所有为取反\n\n#### 浮点数\n\n- IEEE标准：\n\n![浮点数标准分类](/img/深入理解计算机系统/浮点数标准分类.PNG)\n\n- 浮点数规格化的值（frac、exp）\n\n![浮点数规格化的值](/img/深入理解计算机系统/浮点数规格化的值.PNG)\n\n- 对于非规格化值：E=1-Bisas，M=f，不包括隐含的开头的1 ![浮点数规格化的值](/img/深入理解计算机系统/浮点数规格化的值.PNG) \n\n- 舍入\n\n![浮点数舍入](/img/深入理解计算机系统/浮点数舍入.PNG)\n\n​\t将float或double转化成int，值将向零舍入                    \n\n### 程序的机器级表示\n\n#### 数据格式\n\nc数据类型的宽度\n\n| c数据类型   | 32位 | 64位 | x86-64 |\n| ----------- | ---- | ---- | ------ |\n| char        | 1    | 1    | 1      |\n| short       | 2    | 2    | 2      |\n| int         | 4    | 4    | 4      |\n| long        | 4    | 8    | 8      |\n| float       | 4    | 4    | 4      |\n| double      | 8    | 8    | 8      |\n| long double | -    | -    | 10/16  |\n| pointer     | 4    | 8    | 8      |\n\n\n#### 访问信息\n\n- 常规的movq指令只能以表示为32位补码数字的立即数作为源操作数，然后把这个值符号扩展到64位的值放大目的位置；\n\n- MOVZ类中的指令把目的中剩余的字节填充为0，而MOVS类中的指令通过符号扩展来填充，把源操作数的最高位进行复制。\n\n​\tMOVZ类（零扩展）的指令：以寄存器或地址内存作为源，以寄存器作为目的；\n\n​\tMOVS类（符号扩展）的指令：以寄存器或地址内存作为源，以寄存器作为目的；cltq指令无操作数：只作用于%eax和%rax\n\n#### 算术和逻辑操作\n\n![算术和逻辑操作指令](/img/深入理解计算机系统/算术和逻辑操作指令.PNG)\n\n（1）leap指令目的操作数必须是寄存器\n\n（2）左移指令有两个：SAL和SHL，两者效果一样，都是右边补0；右移指令不同，SAR执行算术移位，补充符号位，而SHR执行逻辑移位，补充0\n\n（3）特殊的算术操作\n\n![特殊的操作指令](/img/深入理解计算机系统/特殊的操作指令.PNG)\n\n有符号除法指令 idivl 将%rdx高64位和%rax低64位中的128位作为被除数，而除数作为指令的操作数给出。指令将商存储在%rax，余数存储在%rdx\n\ncqto指令可以不需要操作数，隐含读出%rax的符号位并将其复制到%rdx的每一位\n\n#### 控制\n\n（1）leaq指令不改变条件码\n\n（2）CMP指令和TEST指令只改变条件码，前者基于sub，后者基于and\n\n（3）条件码通常不会直接读取，常用使用方法：\n\n​\ta、根据条件码的某种组合将一个字节设置为0或1（即set指令）\n\n​\tb、条件跳转到程序的某个其他部分\n\n​\tc、有条件的传送数据\n\n（4）set指令：\n\n![set指令](/img/深入理解计算机系统/set指令.PNG)\n\n#### 过程\n\n （1）传递控制、传递数据、分配和释放内存\n\n![栈结构](/img/深入理解计算机系统/栈结构.PNG)\n\n（2）调用函数前，把所有的参数都先存储，包括形参，存储完毕才开始调用函数\n\n（3）栈上的局部变量（局部数据必须用主存的情况)\n\n​\t1）寄存器不足够存放所有的本地数据\n\n​\t2）对一个局部变量使用取址符&，因此必须为其产生一个地址\n\n​\t3）某些局部变量是数组或结构，因此必须通过数组或结构引用访问到。\n\n注：寄存器是唯一被所有过程共享的资源\n\n#### 对抗缓冲区溢出\n\n方法：1、栈随机化 ；2、栈破坏检测 ；3、限制可执行代码区域\n\n#### 过程中的浮点代码\n\n- XMM寄存器8xmn0~ 8xmm7最多可以传递8个浮点参数。按照参数列出的顺序使用这些寄存器。可以通过栈传递额外的浮点参数。\n\n- 函数使用寄存器%xmm0来返回浮点值。\n\n- 所有的XMM寄存器都是调用者保存的。被调用者可以不用保存就覆盖这些寄存器\n  中任意一个。\n\n  | 单精度 | 双精度 | 效果   | 描述                    |\n  | ------ | ------ | ------ | ----------------------- |\n  | vxorps | vorpd  | D<-x*y | 位级异或（EXCLUSIVE-OR) |\n  | vandps | andpd  | D<-x&y | 位级与（AND）           |\n\n| 指令        | 基于 | 描述         |\n| ----------- | ---- | ------------ |\n| ucomiss x,y | y-x  | 比较单精度值 |\n| ucomisd x,y | y-x  | 比较双精度值 |\n\n### 处理器体系结构\n\n1、程序计数器PC保存当前正在执行指令的地址\n\n2、内存从概念上来说就是一个很大的字节数组，保存着程序和数据。Y86-64程序用虚拟地址来引用内存位置。硬件和操作系统软件联合起来将虚拟地址翻译成实际或物理地址\n\n3、Y86-64每条指令需要1~10个字节不等，每条指令的第一个字节表明指令的类型，这个字节分为两部分，每部分4位：高四位是代码部分，低四位是指令部分。功能值只有在一组相关指令共用一个代码时才有用。\n\n4、指令集的一个重要性质就是每个字节编码必须有唯一的解释\n\n5、时钟寄存器：存储单个字：PC、条件代码和程序状态Stat                                                                                                                  随机访问存储器：存储多个字\n\n6、指令处理：\n\n取指、译码、执行、访存、写回、更新PC\n\n7、SEQ的实现包括组合逻辑和两种存储设备：时钟寄存器和随机访问寄存器。四个硬件单元对时序控制：程序计数器、条件码寄存器、数据内存和寄存器文件，通过时钟信号控制。\n\n8、组织原则：从不读回，即处理器从来不需要为了完成一条指令的执行而去读由该指令更新了的状态。\n\n9、每个周期开始前，状态单元（PC、条件码、数据内存、寄存器文件）是根据前一条指令设置的。信号传播通过组合逻辑，创建出新的状态单元的值。\n\n### 优化程序性能\n\n- 程序性能标准：每元素的周期数CPE\n\n- 优化方法：\n\n  1、消除循环低效率：代码移动：\n\n  2、减少过程调用\n\n  3、消除不必要的内存引用\n\n  4、循环展开：减少迭代次数\n\n  5、提高并行性：多个累计变量并行求、重新结合变换\n\n- 课本总结：\n\n  1）高级设计：算法和数据结构\n\n  2）基本编码原则：\n\n  - 消除连续的函数调用：将计算移动到循环外\n\n  - 消除不必要的内存引用：引用临时变量保存中间结果，最后结果得出才放入数组或全局变量\n\n  3）低级优化：\n\n  - 展开循环，降低开销，并且使进一步优化成为可能\n\n  - 通过使用例如多个累积变量和重新结合等技术，提高指令集并行\n\n  - 用功能性的风格重写条件操作，使得编译采用条件数据传送\n\n- 限制因素：\n\n  1、寄存器溢出\n\n  2、分支预测错误和预测错误处罚：不过分关心可预测的分支、书写适合条件传送的代码\n\n### 存储器层次结构\n\n#### 存储技术\n\n#####  随机访问存储器\n\n随机访问存储器分（RAM）为两类：静态SRAM（更快）和动态DRAM\n\n（1）静态（SRAM）\n\nSRAM将每个位存储在一个双稳态的存储器单元，每个单元由一个六晶体管电路实现，可无限期保持在两个不同的电压配置或状态之一\n\n（2）动态（DRAM）\n\nDRAM将每个位存储为对一个电容的充电，对干扰敏感且不能恢复\n\n对比：\n\n![SRAM和DRAM对比](/img/深入理解计算机系统/SRAM和DRAM对比.PNG)\n\n（3）传统的DRAM\n\nDRAM芯片中的单元（位）被分成d个超单元，每个超单元由w个DRAM单元组成，一个d*w的DRAM存储了dw位信息。超单元被组织成r行c列的矩阵，rc=d。\n\n每个超单元存储一个字节\n\n(4)内存模块\n\n--DRAM芯片封装在内存模块中，插到主板的扩展槽上\n\n--内存地址A取值过程：\n\n![6.1.1内存地址取值](/img/深入理解计算机系统/6.1.1内存地址取值.PNG)\n\n\n\n（5）增强的DRAM\n\n快页模式DRAM、扩展数据输出DRAM、同步DRAM、双倍数据速率同步DRAM、视频RAM\n\n（6）非易失性存储器\n\nROM\n\n（7）访问主存\n\n总线：能够携带地址、数据和控制信号，分为：系统总线和内存总线\n\n##### 磁盘存储\n\n磁盘读取时间计算：\n\n![磁盘读取时间计算](/img/深入理解计算机系统/磁盘读取时间计算.PNG)\n\n#### 局部性\n\n   (1)重复引用相同局部变量的程序具有良好的时间局部性\n\n（2）步长越小，空间局部性越好\n\n（3）对于取值指令，循环具有良好的时间和空间局部性，循环体越小，循环迭代次数越多，局部性越好\n\n#### 存储器层次结构\n\n存储器层次结构\n\n![存储器层次结构](/img/深入理解计算机系统/存储器层次结构.PNG)\n\n\n\n#### 高速缓存存储器\n\n缓存不命中：\n\n- 冷不命中（强制性不命中）：\n\n  k层缓存有空行，程序最开始运行时均为冷不命中\n\n- 冲突不命中\n\n  k层中没有空行 \n\n- 容量不命中\n\n组相连高速缓存、组相连高速缓存、全相连高速缓存\n\n#### 编写高速缓存存储器\n\n写命中：\n\n直写：高速缓存中更新的数据立即写回到低一层中\n\n写回：尽可能推迟更新，当替换算法要驱逐这个更新过的块时，才把它写到紧接着的低一层中\n\n写不命中：\n\n写分配：加载相应的低一层的块到高速缓存中，然后更新这个高速缓存块\n\n非写分配：避开高速缓存，直接把这个字写到低一层中\n\n**直写高速缓存通常时写分配的，写回高速缓存通常是非写分配的\n\n#### 综合：高速缓存对程序性能的影响\n\n如果一个高速缓存的块大小为B字节，那么一个步长为k（字）的引用模式平均每次循环迭代会有min（1，（wordsize*k)/k））次缓存不命中\n\n### 异常控制流\n\n#### 异常\n\n（1）异常是控制流中的突变，用来响应处理器状态中的变化。是异常控制流的一种形式，一部分由硬件实现，一部分由操作系统实现\n\n（2）事件处理：\n\n![8.1事件处理](/img/深入理解计算机系统/8.1事件处理.PNG)\n\n（3）异常分类\n\n![异常分类](/img/深入理解计算机系统/异常分类.PNG)\n\n![异常分类2](/img/深入理解计算机系统/异常分类2.PNG)\n\n#### 进程\n\n进程：一个执行中程序的实例。系统中每个程序都运行在某个进程的上下文中。上下文是由程序正确运行所需的状态组成\n\n进程提供的关键抽象：\n\n一个独立的逻辑控制流、一个私有的地址空间\n\n- 并发流：一个逻辑流的执行在时间上与另一个流重叠，称为并发流，这两个流被称为并发的运行。多个流并发地执行一般现象被称为并发。一个进程和其他进程轮流运行的概念称为多任务。一个进程执行它的控制流的一部分的每一时间段叫做时间片，因此，多任务也叫时间分片。\n\n- 如果两个流并发的运行在不同的处理器核或计算机上，那么我们称它们为并行流，它们并行地运行，且并行地执行\n\n- 进程地址空间\n\n  ![进程地址空间](/img/深入理解计算机系统/进程地址空间.PNG)\n\n- 用户模式和内核模式：进程从用户模式切换到内核模式的唯一方式是异常\n\n- 上下文切换：\n\n  1）保存当前进程的上下文；  2）恢复某个先前被抢占的进程被保存的上下文； 3）将控制传递给这个新恢复的进程\n\n#### 进程控制\n\n- 进程的三种状态：\n\n运行：进程要么被执行，要么等待被执行且被内核调度\n\n停止：进程的执行被挂起，且不会被调度。当收到SIGSTOP 、SIGTSTP、SIGTTIN、SIGTOUT信号时，进程停止，并且保持到收到SIGCOUT信号\n\n终止：1）收到一个信号，该信号的默认行为是终止；2）从主程序返回；3）调用exit函数\n\n- 父进程和子进程最大的区别是PID不同。\n\nfork被调用一次，返回两次。一次是在父进程中，fork返回子进程的PID，一次是在新建的子进程中，返回0；\n\n- 子进程和父进程：\n\n  1）fork函数调用一次，返回两次；2）子进程和父进程并发运行；3）相同但是独立的地址空间；4）共享文件\n\n- pid_t wait_pid(int *statusp) : 如果成功，返回子进程的PID；如果WNOHANG，返回0；如果其他错误，返回-1\n\n- unsigned int sleep(unsigned int secs)：返回还要休眠的秒数\n\n- int pause(void)：总是返回-1，让函数休眠，直到该进程接收到另一个信号\n\n- execve:在当前进程的上下文中加载并运行一个新程序，从不返回，（如果找不到filename，才会返回到调用程序）。\n\n#### 编写信号处理程序\n\n1、安全的信号处理\n\n（1）处理程序要尽可能的简单\n\n（2）在处理程序中只调用异步信号安全的函数\n\n（3）保存和恢复errno\n\n（4）阻塞所有信号，保护对共享数据结构的访问\n\n（5）用volatile声明全局变量\n\n（6）用sig_atomic_t声明标志\n\n2、正确的信号处理：未处理的信号不排队\n\n3、可移植的信号处理\n\n\n\n由于本人有一丢丢懒~，漏掉的一些内容懒得更新，排版也只是凑合，还请大家原谅啦啦-----\n\n","source":"_posts/深入理解计算机系统.md","raw":"---\ntitle: 哈尔滨工业大学计算机系统2018年秋期末复习\nurlname: hit_data_structure_review\nmathjax: true\ntags:\n  - 计算机系统\n  - 期末复习\ndescription: 一直想拥有一个自己的博客，但是却一拖再拖，始终没有推送一篇博文，仅以此篇--哈尔滨工业大学计算机系统的复习提纲，仅为期末复习所准备，慰藉以往无bolg的时光。\nabbrlink: 22353\ndate: 2019-03-05 14:00:00\n---\n\n\n- 计算机的字长，是指针数据的位长，表明了虚拟地址空间的大小\n\n- ASCII字符构成的文件成为文本文件，其他所有文件都称为二进制文件\n\n- 核心PC模型由指令集架构决定，操作围绕主存、寄存器文件、算术/逻辑单元ALU进行，进行加载、存储、操作、跳转等操作。\n\n- 存储器层次结构的基本思想：上一层的存储器作为第一层存储器的高速缓存\n\n- 操作系统的基本功能：1：防止硬件被失控 的应用程序滥用；2：向应用程序提供简单一致的机制来控制复杂而通常大而不同的低级硬件设备。 \n\n### 信息的表示和处理\n\n#### 信息存储\n\n- 信息：\n\n```\n数值：值   小数点  符号（三要素）\n\n非数值：文字 图像 视频 语言\n```\n\n- 软件：\n\n  ```\n  系统软件：（用来管理整个计算机系统）\n  \n  语言处理程序  操作系统  服务型程序 数据\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t库管理系统 网络软件\n  ```\n\n- 计算机系统的层次结构：\n\n| 高级语言          | 虚拟机器M3   |\n| ----------------- | ------------ |\n| 汇编语言          | 虚拟机器M2   |\n| 操作系统          | 虚拟机器     |\n| 机器语言          | 实际机器M1   |\n| 微指令语言（时间) | 微程序机器M0 |\n- 机器数（码）：原码 反码 移码  补码\n\n- 数的逻辑：逻辑   算术（+ - * /） c语言中的数\n\n- 逻辑运算符&&和||与对应的位级运算符&和|第二个区别：\n\n  如果对第一个参数求值就能确定表达式的结果，那么逻辑运算符就不会对第二个参数求值。例如：a&&5/a不会造成被零除，p&&*p++不会导致间接引用空指针 \n\n- 集合的表示与运算\n\n  - 表示：位向量表示有限集合\n\n```\neg：10100110   从右到左表示 该集合={1，2，5，7}\n```\n\n- 运算：& 交集     |  并集    ^  对称差集    ~  补集                  \n\n- 左移补0，但右移分为逻辑右移和算术右移，逻辑右移左端补0，算术右移左端补最高有效位的值。c语言对此没有区分，但大多数编译器对有符号数使用算术右移；无符号数右移必须是逻辑的 。Java对右移有明确的规定，x>>k表示x算术右移k个位置，x>>>k表示逻辑右移\n\n#### 整数表示\n\n##### 整数编码\n\n有符号数：补码\n\nB2T(X) = $-X_{w-1}2^{w-1}+\\sum_{i=0}^{w-2}X_i2_i$\n\n例：\n\n|      | 10进制 | 16进制 | 2进制                             |\n| ---- | ------ | ------ | --------------------------------- |\n| X    | 15213  | 3B 6D  | 0011011 01101101                  |\n| Y    | -15213 | C4 93  | 1100100 10010011(最高位1表示负数) |\n\n\n|      | 原码       | 反码      | 补码      |\n| ---- | ---------- | --------- | --------- |\n| 11   | 0000 1011  | 0000 1011 | 0000 1011 |\n| -11  | 1000  1011 | 1111 0100 | 1111 0101 |\n\n注:负数的补码为反码加1,  正数的 原码、反码、补码都相同\n\n##### 知识细节\n\n- 有符号数同一表示形式下，负数的表示范围 比正数的范围大1  \n\n  同一位数：补码的范围不对称，|TMin|=|TMax|+1；                                                                                                                        \t  \t同一位数：最大的无符号数比有符号数的两倍多1，即：UMax = 2TMax + 1​\t\t\t\t\n\n- 对于大多数C语言，处理同样字长的有符号数和无符号数规则：数值可能改变，但位模式不变\n\n​\teg：short v = -12345;    unsigned short  uv = (unsigned short) v;     uv=53191  这里-12345的16位补码和53191的16位编码相同\n\n​\t无符号数和有符号数之间的转换规则：T-->U:补码转化为无符号数       U-->T:无符号数转化为补码\n\n​\t参与运算时，如果有无符号数出现在同一表达式，则有符号数强制转化为无符号数​\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\n- 扩展一个数字的位表示：无符号数零扩展，补码数(有符号数)符号扩展​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n- 截断无符号数：丢弃高位取地位；  截断有符号数：截断后将最高位转化为符号位​\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n#### 整数运算\n\n##### 有符号数和无符号数转换的基本原则：\n\n```\n-位模式不变\n\n-重新解读（按目标编码类型的规则解读）\n\n-会有意外的副作用：数值被 + 或 -$2^w$\n\n-当表达式中有符号数和无符号数混合时，有符号数转化为无符号数\n```\n\n加法:\t无/有符号数的加法：正常加法后再截断，位级的运算相同\n\n​\t\t无符号数：加后对$2^w$求模\n\n##### 符号位扩展\n\n```\n-无符号数：填充0\n\n-有符号位：符号扩展\n\n\t\t\teg：-15213    二进制：11000100 10010011  ---> 11111111 11111111 11000100 10010011\n\n-结果都是明确的预期值\n```\n\n##### 截断\n\n```\n-无论有无符号数，多出的位数都被截断\n\n-结果重新解读\n\n-无符号数: 相当于求模运算\n\n-有符号数：和求模运算相似\n```\n\n​\t-对于小整数，结果是明确的预期值\n\n##### 检测无符号数加法中的溢出：\n\n​\ts =x+y,当且仅当s < x(或等价的s < y)时发生了溢出\n\n​\t无符号数逆元（求反）：x=0时：-x=0\n\n​\t\t\t\t   x > 0时: -x = $2^w$\n\n##### 补码加法：\n\n对于-$2^{w-1}\\le,y\\le2^{w-1}$-1的整数x和y，有\n$$\n\\begin{equation}x+^t_wy=\\begin{cases}x+y-2^w& 2^{w-1}\\le{x+y} & 正溢出\\\\x+y & -2^{w-1}\\le{x+y}<2^{w-1} & 正常\\\\x+y+2^w & x+y<-2^{w-1} & 负溢出\\end{cases}\\end{equation}\n$$\n​     对于满足TMi$n_w\\le$x,y$\\le$TMax$_w$的和y，令s=x+y,当且仅当x > 0,y > 0但s$\\le$0时发生了正溢出；当且仅当x < 0,y < 0但s$\\geq$0时发生了正溢出  \n\n##### 补码的非                                                                                    \n\n对满足$TMin_w\\le x\\le TMax_w$\t的$x$，其补码的非$-^t_wx$由下式给出：\n$$\n\\begin{equation}-^t_wx=\\begin{cases}TMin_w& x = TMin_w\\\\-x & x>TMin_w\\end{cases}\\end{equation}\n$$\n也就是说，对w位的补码加法来说，$TMin_w$是自己的加法的逆，而对其他的都有$-x$作为其加法的逆\n\n##### 补码非的位级表示\n\n​\t方法一：对每一位求补，再对结果加1\n\n​\t方法二：找到最右边的第一个1的位置，然后将该位置左边的所有为取反\n\n#### 浮点数\n\n- IEEE标准：\n\n![浮点数标准分类](/img/深入理解计算机系统/浮点数标准分类.PNG)\n\n- 浮点数规格化的值（frac、exp）\n\n![浮点数规格化的值](/img/深入理解计算机系统/浮点数规格化的值.PNG)\n\n- 对于非规格化值：E=1-Bisas，M=f，不包括隐含的开头的1 ![浮点数规格化的值](/img/深入理解计算机系统/浮点数规格化的值.PNG) \n\n- 舍入\n\n![浮点数舍入](/img/深入理解计算机系统/浮点数舍入.PNG)\n\n​\t将float或double转化成int，值将向零舍入                    \n\n### 程序的机器级表示\n\n#### 数据格式\n\nc数据类型的宽度\n\n| c数据类型   | 32位 | 64位 | x86-64 |\n| ----------- | ---- | ---- | ------ |\n| char        | 1    | 1    | 1      |\n| short       | 2    | 2    | 2      |\n| int         | 4    | 4    | 4      |\n| long        | 4    | 8    | 8      |\n| float       | 4    | 4    | 4      |\n| double      | 8    | 8    | 8      |\n| long double | -    | -    | 10/16  |\n| pointer     | 4    | 8    | 8      |\n\n\n#### 访问信息\n\n- 常规的movq指令只能以表示为32位补码数字的立即数作为源操作数，然后把这个值符号扩展到64位的值放大目的位置；\n\n- MOVZ类中的指令把目的中剩余的字节填充为0，而MOVS类中的指令通过符号扩展来填充，把源操作数的最高位进行复制。\n\n​\tMOVZ类（零扩展）的指令：以寄存器或地址内存作为源，以寄存器作为目的；\n\n​\tMOVS类（符号扩展）的指令：以寄存器或地址内存作为源，以寄存器作为目的；cltq指令无操作数：只作用于%eax和%rax\n\n#### 算术和逻辑操作\n\n![算术和逻辑操作指令](/img/深入理解计算机系统/算术和逻辑操作指令.PNG)\n\n（1）leap指令目的操作数必须是寄存器\n\n（2）左移指令有两个：SAL和SHL，两者效果一样，都是右边补0；右移指令不同，SAR执行算术移位，补充符号位，而SHR执行逻辑移位，补充0\n\n（3）特殊的算术操作\n\n![特殊的操作指令](/img/深入理解计算机系统/特殊的操作指令.PNG)\n\n有符号除法指令 idivl 将%rdx高64位和%rax低64位中的128位作为被除数，而除数作为指令的操作数给出。指令将商存储在%rax，余数存储在%rdx\n\ncqto指令可以不需要操作数，隐含读出%rax的符号位并将其复制到%rdx的每一位\n\n#### 控制\n\n（1）leaq指令不改变条件码\n\n（2）CMP指令和TEST指令只改变条件码，前者基于sub，后者基于and\n\n（3）条件码通常不会直接读取，常用使用方法：\n\n​\ta、根据条件码的某种组合将一个字节设置为0或1（即set指令）\n\n​\tb、条件跳转到程序的某个其他部分\n\n​\tc、有条件的传送数据\n\n（4）set指令：\n\n![set指令](/img/深入理解计算机系统/set指令.PNG)\n\n#### 过程\n\n （1）传递控制、传递数据、分配和释放内存\n\n![栈结构](/img/深入理解计算机系统/栈结构.PNG)\n\n（2）调用函数前，把所有的参数都先存储，包括形参，存储完毕才开始调用函数\n\n（3）栈上的局部变量（局部数据必须用主存的情况)\n\n​\t1）寄存器不足够存放所有的本地数据\n\n​\t2）对一个局部变量使用取址符&，因此必须为其产生一个地址\n\n​\t3）某些局部变量是数组或结构，因此必须通过数组或结构引用访问到。\n\n注：寄存器是唯一被所有过程共享的资源\n\n#### 对抗缓冲区溢出\n\n方法：1、栈随机化 ；2、栈破坏检测 ；3、限制可执行代码区域\n\n#### 过程中的浮点代码\n\n- XMM寄存器8xmn0~ 8xmm7最多可以传递8个浮点参数。按照参数列出的顺序使用这些寄存器。可以通过栈传递额外的浮点参数。\n\n- 函数使用寄存器%xmm0来返回浮点值。\n\n- 所有的XMM寄存器都是调用者保存的。被调用者可以不用保存就覆盖这些寄存器\n  中任意一个。\n\n  | 单精度 | 双精度 | 效果   | 描述                    |\n  | ------ | ------ | ------ | ----------------------- |\n  | vxorps | vorpd  | D<-x*y | 位级异或（EXCLUSIVE-OR) |\n  | vandps | andpd  | D<-x&y | 位级与（AND）           |\n\n| 指令        | 基于 | 描述         |\n| ----------- | ---- | ------------ |\n| ucomiss x,y | y-x  | 比较单精度值 |\n| ucomisd x,y | y-x  | 比较双精度值 |\n\n### 处理器体系结构\n\n1、程序计数器PC保存当前正在执行指令的地址\n\n2、内存从概念上来说就是一个很大的字节数组，保存着程序和数据。Y86-64程序用虚拟地址来引用内存位置。硬件和操作系统软件联合起来将虚拟地址翻译成实际或物理地址\n\n3、Y86-64每条指令需要1~10个字节不等，每条指令的第一个字节表明指令的类型，这个字节分为两部分，每部分4位：高四位是代码部分，低四位是指令部分。功能值只有在一组相关指令共用一个代码时才有用。\n\n4、指令集的一个重要性质就是每个字节编码必须有唯一的解释\n\n5、时钟寄存器：存储单个字：PC、条件代码和程序状态Stat                                                                                                                  随机访问存储器：存储多个字\n\n6、指令处理：\n\n取指、译码、执行、访存、写回、更新PC\n\n7、SEQ的实现包括组合逻辑和两种存储设备：时钟寄存器和随机访问寄存器。四个硬件单元对时序控制：程序计数器、条件码寄存器、数据内存和寄存器文件，通过时钟信号控制。\n\n8、组织原则：从不读回，即处理器从来不需要为了完成一条指令的执行而去读由该指令更新了的状态。\n\n9、每个周期开始前，状态单元（PC、条件码、数据内存、寄存器文件）是根据前一条指令设置的。信号传播通过组合逻辑，创建出新的状态单元的值。\n\n### 优化程序性能\n\n- 程序性能标准：每元素的周期数CPE\n\n- 优化方法：\n\n  1、消除循环低效率：代码移动：\n\n  2、减少过程调用\n\n  3、消除不必要的内存引用\n\n  4、循环展开：减少迭代次数\n\n  5、提高并行性：多个累计变量并行求、重新结合变换\n\n- 课本总结：\n\n  1）高级设计：算法和数据结构\n\n  2）基本编码原则：\n\n  - 消除连续的函数调用：将计算移动到循环外\n\n  - 消除不必要的内存引用：引用临时变量保存中间结果，最后结果得出才放入数组或全局变量\n\n  3）低级优化：\n\n  - 展开循环，降低开销，并且使进一步优化成为可能\n\n  - 通过使用例如多个累积变量和重新结合等技术，提高指令集并行\n\n  - 用功能性的风格重写条件操作，使得编译采用条件数据传送\n\n- 限制因素：\n\n  1、寄存器溢出\n\n  2、分支预测错误和预测错误处罚：不过分关心可预测的分支、书写适合条件传送的代码\n\n### 存储器层次结构\n\n#### 存储技术\n\n#####  随机访问存储器\n\n随机访问存储器分（RAM）为两类：静态SRAM（更快）和动态DRAM\n\n（1）静态（SRAM）\n\nSRAM将每个位存储在一个双稳态的存储器单元，每个单元由一个六晶体管电路实现，可无限期保持在两个不同的电压配置或状态之一\n\n（2）动态（DRAM）\n\nDRAM将每个位存储为对一个电容的充电，对干扰敏感且不能恢复\n\n对比：\n\n![SRAM和DRAM对比](/img/深入理解计算机系统/SRAM和DRAM对比.PNG)\n\n（3）传统的DRAM\n\nDRAM芯片中的单元（位）被分成d个超单元，每个超单元由w个DRAM单元组成，一个d*w的DRAM存储了dw位信息。超单元被组织成r行c列的矩阵，rc=d。\n\n每个超单元存储一个字节\n\n(4)内存模块\n\n--DRAM芯片封装在内存模块中，插到主板的扩展槽上\n\n--内存地址A取值过程：\n\n![6.1.1内存地址取值](/img/深入理解计算机系统/6.1.1内存地址取值.PNG)\n\n\n\n（5）增强的DRAM\n\n快页模式DRAM、扩展数据输出DRAM、同步DRAM、双倍数据速率同步DRAM、视频RAM\n\n（6）非易失性存储器\n\nROM\n\n（7）访问主存\n\n总线：能够携带地址、数据和控制信号，分为：系统总线和内存总线\n\n##### 磁盘存储\n\n磁盘读取时间计算：\n\n![磁盘读取时间计算](/img/深入理解计算机系统/磁盘读取时间计算.PNG)\n\n#### 局部性\n\n   (1)重复引用相同局部变量的程序具有良好的时间局部性\n\n（2）步长越小，空间局部性越好\n\n（3）对于取值指令，循环具有良好的时间和空间局部性，循环体越小，循环迭代次数越多，局部性越好\n\n#### 存储器层次结构\n\n存储器层次结构\n\n![存储器层次结构](/img/深入理解计算机系统/存储器层次结构.PNG)\n\n\n\n#### 高速缓存存储器\n\n缓存不命中：\n\n- 冷不命中（强制性不命中）：\n\n  k层缓存有空行，程序最开始运行时均为冷不命中\n\n- 冲突不命中\n\n  k层中没有空行 \n\n- 容量不命中\n\n组相连高速缓存、组相连高速缓存、全相连高速缓存\n\n#### 编写高速缓存存储器\n\n写命中：\n\n直写：高速缓存中更新的数据立即写回到低一层中\n\n写回：尽可能推迟更新，当替换算法要驱逐这个更新过的块时，才把它写到紧接着的低一层中\n\n写不命中：\n\n写分配：加载相应的低一层的块到高速缓存中，然后更新这个高速缓存块\n\n非写分配：避开高速缓存，直接把这个字写到低一层中\n\n**直写高速缓存通常时写分配的，写回高速缓存通常是非写分配的\n\n#### 综合：高速缓存对程序性能的影响\n\n如果一个高速缓存的块大小为B字节，那么一个步长为k（字）的引用模式平均每次循环迭代会有min（1，（wordsize*k)/k））次缓存不命中\n\n### 异常控制流\n\n#### 异常\n\n（1）异常是控制流中的突变，用来响应处理器状态中的变化。是异常控制流的一种形式，一部分由硬件实现，一部分由操作系统实现\n\n（2）事件处理：\n\n![8.1事件处理](/img/深入理解计算机系统/8.1事件处理.PNG)\n\n（3）异常分类\n\n![异常分类](/img/深入理解计算机系统/异常分类.PNG)\n\n![异常分类2](/img/深入理解计算机系统/异常分类2.PNG)\n\n#### 进程\n\n进程：一个执行中程序的实例。系统中每个程序都运行在某个进程的上下文中。上下文是由程序正确运行所需的状态组成\n\n进程提供的关键抽象：\n\n一个独立的逻辑控制流、一个私有的地址空间\n\n- 并发流：一个逻辑流的执行在时间上与另一个流重叠，称为并发流，这两个流被称为并发的运行。多个流并发地执行一般现象被称为并发。一个进程和其他进程轮流运行的概念称为多任务。一个进程执行它的控制流的一部分的每一时间段叫做时间片，因此，多任务也叫时间分片。\n\n- 如果两个流并发的运行在不同的处理器核或计算机上，那么我们称它们为并行流，它们并行地运行，且并行地执行\n\n- 进程地址空间\n\n  ![进程地址空间](/img/深入理解计算机系统/进程地址空间.PNG)\n\n- 用户模式和内核模式：进程从用户模式切换到内核模式的唯一方式是异常\n\n- 上下文切换：\n\n  1）保存当前进程的上下文；  2）恢复某个先前被抢占的进程被保存的上下文； 3）将控制传递给这个新恢复的进程\n\n#### 进程控制\n\n- 进程的三种状态：\n\n运行：进程要么被执行，要么等待被执行且被内核调度\n\n停止：进程的执行被挂起，且不会被调度。当收到SIGSTOP 、SIGTSTP、SIGTTIN、SIGTOUT信号时，进程停止，并且保持到收到SIGCOUT信号\n\n终止：1）收到一个信号，该信号的默认行为是终止；2）从主程序返回；3）调用exit函数\n\n- 父进程和子进程最大的区别是PID不同。\n\nfork被调用一次，返回两次。一次是在父进程中，fork返回子进程的PID，一次是在新建的子进程中，返回0；\n\n- 子进程和父进程：\n\n  1）fork函数调用一次，返回两次；2）子进程和父进程并发运行；3）相同但是独立的地址空间；4）共享文件\n\n- pid_t wait_pid(int *statusp) : 如果成功，返回子进程的PID；如果WNOHANG，返回0；如果其他错误，返回-1\n\n- unsigned int sleep(unsigned int secs)：返回还要休眠的秒数\n\n- int pause(void)：总是返回-1，让函数休眠，直到该进程接收到另一个信号\n\n- execve:在当前进程的上下文中加载并运行一个新程序，从不返回，（如果找不到filename，才会返回到调用程序）。\n\n#### 编写信号处理程序\n\n1、安全的信号处理\n\n（1）处理程序要尽可能的简单\n\n（2）在处理程序中只调用异步信号安全的函数\n\n（3）保存和恢复errno\n\n（4）阻塞所有信号，保护对共享数据结构的访问\n\n（5）用volatile声明全局变量\n\n（6）用sig_atomic_t声明标志\n\n2、正确的信号处理：未处理的信号不排队\n\n3、可移植的信号处理\n\n\n\n由于本人有一丢丢懒~，漏掉的一些内容懒得更新，排版也只是凑合，还请大家原谅啦啦-----\n\n","slug":"深入理解计算机系统","published":1,"updated":"2019-03-05T07:05:26.609Z","_id":"cjsvfd8h30004hwu34qntwttv","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li><p>计算机的字长，是指针数据的位长，表明了虚拟地址空间的大小</p>\n</li>\n<li><p>ASCII字符构成的文件成为文本文件，其他所有文件都称为二进制文件</p>\n</li>\n<li><p>核心PC模型由指令集架构决定，操作围绕主存、寄存器文件、算术/逻辑单元ALU进行，进行加载、存储、操作、跳转等操作。</p>\n</li>\n<li><p>存储器层次结构的基本思想：上一层的存储器作为第一层存储器的高速缓存</p>\n</li>\n<li><p>操作系统的基本功能：1：防止硬件被失控 的应用程序滥用；2：向应用程序提供简单一致的机制来控制复杂而通常大而不同的低级硬件设备。 </p>\n</li>\n</ul>\n<h3 id=\"信息的表示和处理\"><a href=\"#信息的表示和处理\" class=\"headerlink\" title=\"信息的表示和处理\"></a>信息的表示和处理</h3><h4 id=\"信息存储\"><a href=\"#信息存储\" class=\"headerlink\" title=\"信息存储\"></a>信息存储</h4><ul>\n<li>信息：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数值：值   小数点  符号（三要素）</span><br><span class=\"line\"></span><br><span class=\"line\">非数值：文字 图像 视频 语言</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>软件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">系统软件：（用来管理整个计算机系统）</span><br><span class=\"line\"></span><br><span class=\"line\">语言处理程序  操作系统  服务型程序 数据\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t库管理系统 网络软件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算机系统的层次结构：</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>高级语言</th>\n<th>虚拟机器M3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>汇编语言</td>\n<td>虚拟机器M2</td>\n</tr>\n<tr>\n<td>操作系统</td>\n<td>虚拟机器</td>\n</tr>\n<tr>\n<td>机器语言</td>\n<td>实际机器M1</td>\n</tr>\n<tr>\n<td>微指令语言（时间)</td>\n<td>微程序机器M0</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p>机器数（码）：原码 反码 移码  补码</p>\n</li>\n<li><p>数的逻辑：逻辑   算术（+ - * /） c语言中的数</p>\n</li>\n<li><p>逻辑运算符&amp;&amp;和||与对应的位级运算符&amp;和|第二个区别：</p>\n<p>如果对第一个参数求值就能确定表达式的结果，那么逻辑运算符就不会对第二个参数求值。例如：a&amp;&amp;5/a不会造成被零除，p&amp;&amp;*p++不会导致间接引用空指针 </p>\n</li>\n<li><p>集合的表示与运算</p>\n<ul>\n<li>表示：位向量表示有限集合</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg：<span class=\"number\">10100110</span>   从右到左表示 该集合=&#123;<span class=\"number\">1</span>，<span class=\"number\">2</span>，<span class=\"number\">5</span>，<span class=\"number\">7</span>&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>运算：&amp; 交集     |  并集    ^  对称差集    ~  补集                  </p>\n</li>\n<li><p>左移补0，但右移分为逻辑右移和算术右移，逻辑右移左端补0，算术右移左端补最高有效位的值。c语言对此没有区分，但大多数编译器对有符号数使用算术右移；无符号数右移必须是逻辑的 。Java对右移有明确的规定，x&gt;&gt;k表示x算术右移k个位置，x&gt;&gt;&gt;k表示逻辑右移</p>\n</li>\n</ul>\n<h4 id=\"整数表示\"><a href=\"#整数表示\" class=\"headerlink\" title=\"整数表示\"></a>整数表示</h4><h5 id=\"整数编码\"><a href=\"#整数编码\" class=\"headerlink\" title=\"整数编码\"></a>整数编码</h5><p>有符号数：补码</p>\n<p>B2T(X) = $-X_{w-1}2^{w-1}+\\sum_{i=0}^{w-2}X_i2_i$</p>\n<p>例：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>10进制</th>\n<th>16进制</th>\n<th>2进制</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>X</td>\n<td>15213</td>\n<td>3B 6D</td>\n<td>0011011 01101101</td>\n</tr>\n<tr>\n<td>Y</td>\n<td>-15213</td>\n<td>C4 93</td>\n<td>1100100 10010011(最高位1表示负数)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>原码</th>\n<th>反码</th>\n<th>补码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>11</td>\n<td>0000 1011</td>\n<td>0000 1011</td>\n<td>0000 1011</td>\n</tr>\n<tr>\n<td>-11</td>\n<td>1000  1011</td>\n<td>1111 0100</td>\n<td>1111 0101</td>\n</tr>\n</tbody>\n</table>\n<p>注:负数的补码为反码加1,  正数的 原码、反码、补码都相同</p>\n<h5 id=\"知识细节\"><a href=\"#知识细节\" class=\"headerlink\" title=\"知识细节\"></a>知识细节</h5><ul>\n<li><p>有符号数同一表示形式下，负数的表示范围 比正数的范围大1  </p>\n<p>同一位数：补码的范围不对称，|TMin|=|TMax|+1；                                                                                                                                  同一位数：最大的无符号数比有符号数的两倍多1，即：UMax = 2TMax + 1​                </p>\n</li>\n<li><p>对于大多数C语言，处理同样字长的有符号数和无符号数规则：数值可能改变，但位模式不变</p>\n</li>\n</ul>\n<p>​    eg：short v = -12345;    unsigned short  uv = (unsigned short) v;     uv=53191  这里-12345的16位补码和53191的16位编码相同</p>\n<p>​    无符号数和有符号数之间的转换规则：T–&gt;U:补码转化为无符号数       U–&gt;T:无符号数转化为补码</p>\n<p>​    参与运算时，如果有无符号数出现在同一表达式，则有符号数强制转化为无符号数​                                                      </p>\n<ul>\n<li><p>扩展一个数字的位表示：无符号数零扩展，补码数(有符号数)符号扩展​                                                        </p>\n</li>\n<li><p>截断无符号数：丢弃高位取地位；  截断有符号数：截断后将最高位转化为符号位​                                                    </p>\n</li>\n</ul>\n<h4 id=\"整数运算\"><a href=\"#整数运算\" class=\"headerlink\" title=\"整数运算\"></a>整数运算</h4><h5 id=\"有符号数和无符号数转换的基本原则：\"><a href=\"#有符号数和无符号数转换的基本原则：\" class=\"headerlink\" title=\"有符号数和无符号数转换的基本原则：\"></a>有符号数和无符号数转换的基本原则：</h5><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"ruby\">位模式不变</span></span><br><span class=\"line\"><span class=\"ruby\"></span></span><br><span class=\"line\"><span class=\"ruby\">-重新解读（按目标编码类型的规则解读）</span></span><br><span class=\"line\"><span class=\"ruby\"></span></span><br><span class=\"line\"><span class=\"ruby\">-会有意外的副作用：数值被 + 或 -$2^w$</span></span><br><span class=\"line\"><span class=\"ruby\"></span></span><br><span class=\"line\"><span class=\"ruby\">-当表达式中有符号数和无符号数混合时，有符号数转化为无符号数</span></span><br></pre></td></tr></table></figure>\n<p>加法:    无/有符号数的加法：正常加法后再截断，位级的运算相同</p>\n<p>​        无符号数：加后对$2^w$求模</p>\n<h5 id=\"符号位扩展\"><a href=\"#符号位扩展\" class=\"headerlink\" title=\"符号位扩展\"></a>符号位扩展</h5><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-无符号数：填充<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">-有符号位：符号扩展</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\teg：<span class=\"number\">-15213</span>    二进制：<span class=\"number\">11000100</span> <span class=\"number\">10010011</span>  ---&gt; <span class=\"number\">11111111</span> <span class=\"number\">11111111</span> <span class=\"number\">11000100</span> <span class=\"number\">10010011</span></span><br><span class=\"line\"></span><br><span class=\"line\">-结果都是明确的预期值</span><br></pre></td></tr></table></figure>\n<h5 id=\"截断\"><a href=\"#截断\" class=\"headerlink\" title=\"截断\"></a>截断</h5><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-无论有无符号数，多出的位数都被截断</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-结果重新解读</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-无符号数: 相当于求模运算</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-有符号数：和求模运算相似</span></span><br></pre></td></tr></table></figure>\n<p>​    -对于小整数，结果是明确的预期值</p>\n<h5 id=\"检测无符号数加法中的溢出：\"><a href=\"#检测无符号数加法中的溢出：\" class=\"headerlink\" title=\"检测无符号数加法中的溢出：\"></a>检测无符号数加法中的溢出：</h5><p>​    s =x+y,当且仅当s &lt; x(或等价的s &lt; y)时发生了溢出</p>\n<p>​    无符号数逆元（求反）：x=0时：-x=0</p>\n<p>​                   x &gt; 0时: -x = $2^w$</p>\n<h5 id=\"补码加法：\"><a href=\"#补码加法：\" class=\"headerlink\" title=\"补码加法：\"></a>补码加法：</h5><p>对于-$2^{w-1}\\le,y\\le2^{w-1}$-1的整数x和y，有<br>$$<br>\\begin{equation}x+^t_wy=\\begin{cases}x+y-2^w&amp; 2^{w-1}\\le{x+y} &amp; 正溢出\\x+y &amp; -2^{w-1}\\le{x+y}&lt;2^{w-1} &amp; 正常\\x+y+2^w &amp; x+y&lt;-2^{w-1} &amp; 负溢出\\end{cases}\\end{equation}<br>$$<br>​     对于满足TMi$n_w\\le$x,y$\\le$TMax$_w$的和y，令s=x+y,当且仅当x &gt; 0,y &gt; 0但s$\\le$0时发生了正溢出；当且仅当x &lt; 0,y &lt; 0但s$\\geq$0时发生了正溢出  </p>\n<h5 id=\"补码的非\"><a href=\"#补码的非\" class=\"headerlink\" title=\"补码的非\"></a>补码的非</h5><p>对满足$TMin_w\\le x\\le TMax_w$    的$x$，其补码的非$-^t_wx$由下式给出：<br>$$<br>\\begin{equation}-^t_wx=\\begin{cases}TMin_w&amp; x = TMin_w\\-x &amp; x&gt;TMin_w\\end{cases}\\end{equation}<br>$$<br>也就是说，对w位的补码加法来说，$TMin_w$是自己的加法的逆，而对其他的都有$-x$作为其加法的逆</p>\n<h5 id=\"补码非的位级表示\"><a href=\"#补码非的位级表示\" class=\"headerlink\" title=\"补码非的位级表示\"></a>补码非的位级表示</h5><p>​    方法一：对每一位求补，再对结果加1</p>\n<p>​    方法二：找到最右边的第一个1的位置，然后将该位置左边的所有为取反</p>\n<h4 id=\"浮点数\"><a href=\"#浮点数\" class=\"headerlink\" title=\"浮点数\"></a>浮点数</h4><ul>\n<li>IEEE标准：</li>\n</ul>\n<p><img src=\"/img/深入理解计算机系统/浮点数标准分类.PNG\" alt=\"浮点数标准分类\"></p>\n<ul>\n<li>浮点数规格化的值（frac、exp）</li>\n</ul>\n<p><img src=\"/img/深入理解计算机系统/浮点数规格化的值.PNG\" alt=\"浮点数规格化的值\"></p>\n<ul>\n<li><p>对于非规格化值：E=1-Bisas，M=f，不包括隐含的开头的1 <img src=\"/img/深入理解计算机系统/浮点数规格化的值.PNG\" alt=\"浮点数规格化的值\"> </p>\n</li>\n<li><p>舍入</p>\n</li>\n</ul>\n<p><img src=\"/img/深入理解计算机系统/浮点数舍入.PNG\" alt=\"浮点数舍入\"></p>\n<p>​    将float或double转化成int，值将向零舍入                    </p>\n<h3 id=\"程序的机器级表示\"><a href=\"#程序的机器级表示\" class=\"headerlink\" title=\"程序的机器级表示\"></a>程序的机器级表示</h3><h4 id=\"数据格式\"><a href=\"#数据格式\" class=\"headerlink\" title=\"数据格式\"></a>数据格式</h4><p>c数据类型的宽度</p>\n<table>\n<thead>\n<tr>\n<th>c数据类型</th>\n<th>32位</th>\n<th>64位</th>\n<th>x86-64</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>char</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>short</td>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n</tr>\n<tr>\n<td>int</td>\n<td>4</td>\n<td>4</td>\n<td>4</td>\n</tr>\n<tr>\n<td>long</td>\n<td>4</td>\n<td>8</td>\n<td>8</td>\n</tr>\n<tr>\n<td>float</td>\n<td>4</td>\n<td>4</td>\n<td>4</td>\n</tr>\n<tr>\n<td>double</td>\n<td>8</td>\n<td>8</td>\n<td>8</td>\n</tr>\n<tr>\n<td>long double</td>\n<td>-</td>\n<td>-</td>\n<td>10/16</td>\n</tr>\n<tr>\n<td>pointer</td>\n<td>4</td>\n<td>8</td>\n<td>8</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"访问信息\"><a href=\"#访问信息\" class=\"headerlink\" title=\"访问信息\"></a>访问信息</h4><ul>\n<li><p>常规的movq指令只能以表示为32位补码数字的立即数作为源操作数，然后把这个值符号扩展到64位的值放大目的位置；</p>\n</li>\n<li><p>MOVZ类中的指令把目的中剩余的字节填充为0，而MOVS类中的指令通过符号扩展来填充，把源操作数的最高位进行复制。</p>\n</li>\n</ul>\n<p>​    MOVZ类（零扩展）的指令：以寄存器或地址内存作为源，以寄存器作为目的；</p>\n<p>​    MOVS类（符号扩展）的指令：以寄存器或地址内存作为源，以寄存器作为目的；cltq指令无操作数：只作用于%eax和%rax</p>\n<h4 id=\"算术和逻辑操作\"><a href=\"#算术和逻辑操作\" class=\"headerlink\" title=\"算术和逻辑操作\"></a>算术和逻辑操作</h4><p><img src=\"/img/深入理解计算机系统/算术和逻辑操作指令.PNG\" alt=\"算术和逻辑操作指令\"></p>\n<p>（1）leap指令目的操作数必须是寄存器</p>\n<p>（2）左移指令有两个：SAL和SHL，两者效果一样，都是右边补0；右移指令不同，SAR执行算术移位，补充符号位，而SHR执行逻辑移位，补充0</p>\n<p>（3）特殊的算术操作</p>\n<p><img src=\"/img/深入理解计算机系统/特殊的操作指令.PNG\" alt=\"特殊的操作指令\"></p>\n<p>有符号除法指令 idivl 将%rdx高64位和%rax低64位中的128位作为被除数，而除数作为指令的操作数给出。指令将商存储在%rax，余数存储在%rdx</p>\n<p>cqto指令可以不需要操作数，隐含读出%rax的符号位并将其复制到%rdx的每一位</p>\n<h4 id=\"控制\"><a href=\"#控制\" class=\"headerlink\" title=\"控制\"></a>控制</h4><p>（1）leaq指令不改变条件码</p>\n<p>（2）CMP指令和TEST指令只改变条件码，前者基于sub，后者基于and</p>\n<p>（3）条件码通常不会直接读取，常用使用方法：</p>\n<p>​    a、根据条件码的某种组合将一个字节设置为0或1（即set指令）</p>\n<p>​    b、条件跳转到程序的某个其他部分</p>\n<p>​    c、有条件的传送数据</p>\n<p>（4）set指令：</p>\n<p><img src=\"/img/深入理解计算机系统/set指令.PNG\" alt=\"set指令\"></p>\n<h4 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h4><p> （1）传递控制、传递数据、分配和释放内存</p>\n<p><img src=\"/img/深入理解计算机系统/栈结构.PNG\" alt=\"栈结构\"></p>\n<p>（2）调用函数前，把所有的参数都先存储，包括形参，存储完毕才开始调用函数</p>\n<p>（3）栈上的局部变量（局部数据必须用主存的情况)</p>\n<p>​    1）寄存器不足够存放所有的本地数据</p>\n<p>​    2）对一个局部变量使用取址符&amp;，因此必须为其产生一个地址</p>\n<p>​    3）某些局部变量是数组或结构，因此必须通过数组或结构引用访问到。</p>\n<p>注：寄存器是唯一被所有过程共享的资源</p>\n<h4 id=\"对抗缓冲区溢出\"><a href=\"#对抗缓冲区溢出\" class=\"headerlink\" title=\"对抗缓冲区溢出\"></a>对抗缓冲区溢出</h4><p>方法：1、栈随机化 ；2、栈破坏检测 ；3、限制可执行代码区域</p>\n<h4 id=\"过程中的浮点代码\"><a href=\"#过程中的浮点代码\" class=\"headerlink\" title=\"过程中的浮点代码\"></a>过程中的浮点代码</h4><ul>\n<li><p>XMM寄存器8xmn0~ 8xmm7最多可以传递8个浮点参数。按照参数列出的顺序使用这些寄存器。可以通过栈传递额外的浮点参数。</p>\n</li>\n<li><p>函数使用寄存器%xmm0来返回浮点值。</p>\n</li>\n<li><p>所有的XMM寄存器都是调用者保存的。被调用者可以不用保存就覆盖这些寄存器<br>中任意一个。</p>\n<p>| 单精度 | 双精度 | 效果   | 描述                    |<br>| —— | —— | —— | ———————– |<br>| vxorps | vorpd  | D&lt;-x*y | 位级异或（EXCLUSIVE-OR) |<br>| vandps | andpd  | D&lt;-x&amp;y | 位级与（AND）           |</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>基于</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ucomiss x,y</td>\n<td>y-x</td>\n<td>比较单精度值</td>\n</tr>\n<tr>\n<td>ucomisd x,y</td>\n<td>y-x</td>\n<td>比较双精度值</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"处理器体系结构\"><a href=\"#处理器体系结构\" class=\"headerlink\" title=\"处理器体系结构\"></a>处理器体系结构</h3><p>1、程序计数器PC保存当前正在执行指令的地址</p>\n<p>2、内存从概念上来说就是一个很大的字节数组，保存着程序和数据。Y86-64程序用虚拟地址来引用内存位置。硬件和操作系统软件联合起来将虚拟地址翻译成实际或物理地址</p>\n<p>3、Y86-64每条指令需要1~10个字节不等，每条指令的第一个字节表明指令的类型，这个字节分为两部分，每部分4位：高四位是代码部分，低四位是指令部分。功能值只有在一组相关指令共用一个代码时才有用。</p>\n<p>4、指令集的一个重要性质就是每个字节编码必须有唯一的解释</p>\n<p>5、时钟寄存器：存储单个字：PC、条件代码和程序状态Stat                                                                                                                  随机访问存储器：存储多个字</p>\n<p>6、指令处理：</p>\n<p>取指、译码、执行、访存、写回、更新PC</p>\n<p>7、SEQ的实现包括组合逻辑和两种存储设备：时钟寄存器和随机访问寄存器。四个硬件单元对时序控制：程序计数器、条件码寄存器、数据内存和寄存器文件，通过时钟信号控制。</p>\n<p>8、组织原则：从不读回，即处理器从来不需要为了完成一条指令的执行而去读由该指令更新了的状态。</p>\n<p>9、每个周期开始前，状态单元（PC、条件码、数据内存、寄存器文件）是根据前一条指令设置的。信号传播通过组合逻辑，创建出新的状态单元的值。</p>\n<h3 id=\"优化程序性能\"><a href=\"#优化程序性能\" class=\"headerlink\" title=\"优化程序性能\"></a>优化程序性能</h3><ul>\n<li><p>程序性能标准：每元素的周期数CPE</p>\n</li>\n<li><p>优化方法：</p>\n<p>1、消除循环低效率：代码移动：</p>\n<p>2、减少过程调用</p>\n<p>3、消除不必要的内存引用</p>\n<p>4、循环展开：减少迭代次数</p>\n<p>5、提高并行性：多个累计变量并行求、重新结合变换</p>\n</li>\n<li><p>课本总结：</p>\n<p>1）高级设计：算法和数据结构</p>\n<p>2）基本编码原则：</p>\n<ul>\n<li><p>消除连续的函数调用：将计算移动到循环外</p>\n</li>\n<li><p>消除不必要的内存引用：引用临时变量保存中间结果，最后结果得出才放入数组或全局变量</p>\n</li>\n</ul>\n<p>3）低级优化：</p>\n<ul>\n<li><p>展开循环，降低开销，并且使进一步优化成为可能</p>\n</li>\n<li><p>通过使用例如多个累积变量和重新结合等技术，提高指令集并行</p>\n</li>\n<li><p>用功能性的风格重写条件操作，使得编译采用条件数据传送</p>\n</li>\n</ul>\n</li>\n<li><p>限制因素：</p>\n<p>1、寄存器溢出</p>\n<p>2、分支预测错误和预测错误处罚：不过分关心可预测的分支、书写适合条件传送的代码</p>\n</li>\n</ul>\n<h3 id=\"存储器层次结构\"><a href=\"#存储器层次结构\" class=\"headerlink\" title=\"存储器层次结构\"></a>存储器层次结构</h3><h4 id=\"存储技术\"><a href=\"#存储技术\" class=\"headerlink\" title=\"存储技术\"></a>存储技术</h4><h5 id=\"随机访问存储器\"><a href=\"#随机访问存储器\" class=\"headerlink\" title=\"随机访问存储器\"></a>随机访问存储器</h5><p>随机访问存储器分（RAM）为两类：静态SRAM（更快）和动态DRAM</p>\n<p>（1）静态（SRAM）</p>\n<p>SRAM将每个位存储在一个双稳态的存储器单元，每个单元由一个六晶体管电路实现，可无限期保持在两个不同的电压配置或状态之一</p>\n<p>（2）动态（DRAM）</p>\n<p>DRAM将每个位存储为对一个电容的充电，对干扰敏感且不能恢复</p>\n<p>对比：</p>\n<p><img src=\"/img/深入理解计算机系统/SRAM和DRAM对比.PNG\" alt=\"SRAM和DRAM对比\"></p>\n<p>（3）传统的DRAM</p>\n<p>DRAM芯片中的单元（位）被分成d个超单元，每个超单元由w个DRAM单元组成，一个d*w的DRAM存储了dw位信息。超单元被组织成r行c列的矩阵，rc=d。</p>\n<p>每个超单元存储一个字节</p>\n<p>(4)内存模块</p>\n<p>–DRAM芯片封装在内存模块中，插到主板的扩展槽上</p>\n<p>–内存地址A取值过程：</p>\n<p><img src=\"/img/深入理解计算机系统/6.1.1内存地址取值.PNG\" alt=\"6.1.1内存地址取值\"></p>\n<p>（5）增强的DRAM</p>\n<p>快页模式DRAM、扩展数据输出DRAM、同步DRAM、双倍数据速率同步DRAM、视频RAM</p>\n<p>（6）非易失性存储器</p>\n<p>ROM</p>\n<p>（7）访问主存</p>\n<p>总线：能够携带地址、数据和控制信号，分为：系统总线和内存总线</p>\n<h5 id=\"磁盘存储\"><a href=\"#磁盘存储\" class=\"headerlink\" title=\"磁盘存储\"></a>磁盘存储</h5><p>磁盘读取时间计算：</p>\n<p><img src=\"/img/深入理解计算机系统/磁盘读取时间计算.PNG\" alt=\"磁盘读取时间计算\"></p>\n<h4 id=\"局部性\"><a href=\"#局部性\" class=\"headerlink\" title=\"局部性\"></a>局部性</h4><p>   (1)重复引用相同局部变量的程序具有良好的时间局部性</p>\n<p>（2）步长越小，空间局部性越好</p>\n<p>（3）对于取值指令，循环具有良好的时间和空间局部性，循环体越小，循环迭代次数越多，局部性越好</p>\n<h4 id=\"存储器层次结构-1\"><a href=\"#存储器层次结构-1\" class=\"headerlink\" title=\"存储器层次结构\"></a>存储器层次结构</h4><p>存储器层次结构</p>\n<p><img src=\"/img/深入理解计算机系统/存储器层次结构.PNG\" alt=\"存储器层次结构\"></p>\n<h4 id=\"高速缓存存储器\"><a href=\"#高速缓存存储器\" class=\"headerlink\" title=\"高速缓存存储器\"></a>高速缓存存储器</h4><p>缓存不命中：</p>\n<ul>\n<li><p>冷不命中（强制性不命中）：</p>\n<p>k层缓存有空行，程序最开始运行时均为冷不命中</p>\n</li>\n<li><p>冲突不命中</p>\n<p>k层中没有空行 </p>\n</li>\n<li><p>容量不命中</p>\n</li>\n</ul>\n<p>组相连高速缓存、组相连高速缓存、全相连高速缓存</p>\n<h4 id=\"编写高速缓存存储器\"><a href=\"#编写高速缓存存储器\" class=\"headerlink\" title=\"编写高速缓存存储器\"></a>编写高速缓存存储器</h4><p>写命中：</p>\n<p>直写：高速缓存中更新的数据立即写回到低一层中</p>\n<p>写回：尽可能推迟更新，当替换算法要驱逐这个更新过的块时，才把它写到紧接着的低一层中</p>\n<p>写不命中：</p>\n<p>写分配：加载相应的低一层的块到高速缓存中，然后更新这个高速缓存块</p>\n<p>非写分配：避开高速缓存，直接把这个字写到低一层中</p>\n<p>**直写高速缓存通常时写分配的，写回高速缓存通常是非写分配的</p>\n<h4 id=\"综合：高速缓存对程序性能的影响\"><a href=\"#综合：高速缓存对程序性能的影响\" class=\"headerlink\" title=\"综合：高速缓存对程序性能的影响\"></a>综合：高速缓存对程序性能的影响</h4><p>如果一个高速缓存的块大小为B字节，那么一个步长为k（字）的引用模式平均每次循环迭代会有min（1，（wordsize*k)/k））次缓存不命中</p>\n<h3 id=\"异常控制流\"><a href=\"#异常控制流\" class=\"headerlink\" title=\"异常控制流\"></a>异常控制流</h3><h4 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h4><p>（1）异常是控制流中的突变，用来响应处理器状态中的变化。是异常控制流的一种形式，一部分由硬件实现，一部分由操作系统实现</p>\n<p>（2）事件处理：</p>\n<p><img src=\"/img/深入理解计算机系统/8.1事件处理.PNG\" alt=\"8.1事件处理\"></p>\n<p>（3）异常分类</p>\n<p><img src=\"/img/深入理解计算机系统/异常分类.PNG\" alt=\"异常分类\"></p>\n<p><img src=\"/img/深入理解计算机系统/异常分类2.PNG\" alt=\"异常分类2\"></p>\n<h4 id=\"进程\"><a href=\"#进程\" class=\"headerlink\" title=\"进程\"></a>进程</h4><p>进程：一个执行中程序的实例。系统中每个程序都运行在某个进程的上下文中。上下文是由程序正确运行所需的状态组成</p>\n<p>进程提供的关键抽象：</p>\n<p>一个独立的逻辑控制流、一个私有的地址空间</p>\n<ul>\n<li><p>并发流：一个逻辑流的执行在时间上与另一个流重叠，称为并发流，这两个流被称为并发的运行。多个流并发地执行一般现象被称为并发。一个进程和其他进程轮流运行的概念称为多任务。一个进程执行它的控制流的一部分的每一时间段叫做时间片，因此，多任务也叫时间分片。</p>\n</li>\n<li><p>如果两个流并发的运行在不同的处理器核或计算机上，那么我们称它们为并行流，它们并行地运行，且并行地执行</p>\n</li>\n<li><p>进程地址空间</p>\n<p><img src=\"/img/深入理解计算机系统/进程地址空间.PNG\" alt=\"进程地址空间\"></p>\n</li>\n<li><p>用户模式和内核模式：进程从用户模式切换到内核模式的唯一方式是异常</p>\n</li>\n<li><p>上下文切换：</p>\n<p>1）保存当前进程的上下文；  2）恢复某个先前被抢占的进程被保存的上下文； 3）将控制传递给这个新恢复的进程</p>\n</li>\n</ul>\n<h4 id=\"进程控制\"><a href=\"#进程控制\" class=\"headerlink\" title=\"进程控制\"></a>进程控制</h4><ul>\n<li>进程的三种状态：</li>\n</ul>\n<p>运行：进程要么被执行，要么等待被执行且被内核调度</p>\n<p>停止：进程的执行被挂起，且不会被调度。当收到SIGSTOP 、SIGTSTP、SIGTTIN、SIGTOUT信号时，进程停止，并且保持到收到SIGCOUT信号</p>\n<p>终止：1）收到一个信号，该信号的默认行为是终止；2）从主程序返回；3）调用exit函数</p>\n<ul>\n<li>父进程和子进程最大的区别是PID不同。</li>\n</ul>\n<p>fork被调用一次，返回两次。一次是在父进程中，fork返回子进程的PID，一次是在新建的子进程中，返回0；</p>\n<ul>\n<li><p>子进程和父进程：</p>\n<p>1）fork函数调用一次，返回两次；2）子进程和父进程并发运行；3）相同但是独立的地址空间；4）共享文件</p>\n</li>\n<li><p>pid_t wait_pid(int *statusp) : 如果成功，返回子进程的PID；如果WNOHANG，返回0；如果其他错误，返回-1</p>\n</li>\n<li><p>unsigned int sleep(unsigned int secs)：返回还要休眠的秒数</p>\n</li>\n<li><p>int pause(void)：总是返回-1，让函数休眠，直到该进程接收到另一个信号</p>\n</li>\n<li><p>execve:在当前进程的上下文中加载并运行一个新程序，从不返回，（如果找不到filename，才会返回到调用程序）。</p>\n</li>\n</ul>\n<h4 id=\"编写信号处理程序\"><a href=\"#编写信号处理程序\" class=\"headerlink\" title=\"编写信号处理程序\"></a>编写信号处理程序</h4><p>1、安全的信号处理</p>\n<p>（1）处理程序要尽可能的简单</p>\n<p>（2）在处理程序中只调用异步信号安全的函数</p>\n<p>（3）保存和恢复errno</p>\n<p>（4）阻塞所有信号，保护对共享数据结构的访问</p>\n<p>（5）用volatile声明全局变量</p>\n<p>（6）用sig_atomic_t声明标志</p>\n<p>2、正确的信号处理：未处理的信号不排队</p>\n<p>3、可移植的信号处理</p>\n<p>由于本人有一丢丢懒~，漏掉的一些内容懒得更新，排版也只是凑合，还请大家原谅啦啦—–</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>计算机的字长，是指针数据的位长，表明了虚拟地址空间的大小</p>\n</li>\n<li><p>ASCII字符构成的文件成为文本文件，其他所有文件都称为二进制文件</p>\n</li>\n<li><p>核心PC模型由指令集架构决定，操作围绕主存、寄存器文件、算术/逻辑单元ALU进行，进行加载、存储、操作、跳转等操作。</p>\n</li>\n<li><p>存储器层次结构的基本思想：上一层的存储器作为第一层存储器的高速缓存</p>\n</li>\n<li><p>操作系统的基本功能：1：防止硬件被失控 的应用程序滥用；2：向应用程序提供简单一致的机制来控制复杂而通常大而不同的低级硬件设备。 </p>\n</li>\n</ul>\n<h3 id=\"信息的表示和处理\"><a href=\"#信息的表示和处理\" class=\"headerlink\" title=\"信息的表示和处理\"></a>信息的表示和处理</h3><h4 id=\"信息存储\"><a href=\"#信息存储\" class=\"headerlink\" title=\"信息存储\"></a>信息存储</h4><ul>\n<li>信息：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数值：值   小数点  符号（三要素）</span><br><span class=\"line\"></span><br><span class=\"line\">非数值：文字 图像 视频 语言</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>软件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">系统软件：（用来管理整个计算机系统）</span><br><span class=\"line\"></span><br><span class=\"line\">语言处理程序  操作系统  服务型程序 数据\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t库管理系统 网络软件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算机系统的层次结构：</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>高级语言</th>\n<th>虚拟机器M3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>汇编语言</td>\n<td>虚拟机器M2</td>\n</tr>\n<tr>\n<td>操作系统</td>\n<td>虚拟机器</td>\n</tr>\n<tr>\n<td>机器语言</td>\n<td>实际机器M1</td>\n</tr>\n<tr>\n<td>微指令语言（时间)</td>\n<td>微程序机器M0</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p>机器数（码）：原码 反码 移码  补码</p>\n</li>\n<li><p>数的逻辑：逻辑   算术（+ - * /） c语言中的数</p>\n</li>\n<li><p>逻辑运算符&amp;&amp;和||与对应的位级运算符&amp;和|第二个区别：</p>\n<p>如果对第一个参数求值就能确定表达式的结果，那么逻辑运算符就不会对第二个参数求值。例如：a&amp;&amp;5/a不会造成被零除，p&amp;&amp;*p++不会导致间接引用空指针 </p>\n</li>\n<li><p>集合的表示与运算</p>\n<ul>\n<li>表示：位向量表示有限集合</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg：<span class=\"number\">10100110</span>   从右到左表示 该集合=&#123;<span class=\"number\">1</span>，<span class=\"number\">2</span>，<span class=\"number\">5</span>，<span class=\"number\">7</span>&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>运算：&amp; 交集     |  并集    ^  对称差集    ~  补集                  </p>\n</li>\n<li><p>左移补0，但右移分为逻辑右移和算术右移，逻辑右移左端补0，算术右移左端补最高有效位的值。c语言对此没有区分，但大多数编译器对有符号数使用算术右移；无符号数右移必须是逻辑的 。Java对右移有明确的规定，x&gt;&gt;k表示x算术右移k个位置，x&gt;&gt;&gt;k表示逻辑右移</p>\n</li>\n</ul>\n<h4 id=\"整数表示\"><a href=\"#整数表示\" class=\"headerlink\" title=\"整数表示\"></a>整数表示</h4><h5 id=\"整数编码\"><a href=\"#整数编码\" class=\"headerlink\" title=\"整数编码\"></a>整数编码</h5><p>有符号数：补码</p>\n<p>B2T(X) = $-X_{w-1}2^{w-1}+\\sum_{i=0}^{w-2}X_i2_i$</p>\n<p>例：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>10进制</th>\n<th>16进制</th>\n<th>2进制</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>X</td>\n<td>15213</td>\n<td>3B 6D</td>\n<td>0011011 01101101</td>\n</tr>\n<tr>\n<td>Y</td>\n<td>-15213</td>\n<td>C4 93</td>\n<td>1100100 10010011(最高位1表示负数)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>原码</th>\n<th>反码</th>\n<th>补码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>11</td>\n<td>0000 1011</td>\n<td>0000 1011</td>\n<td>0000 1011</td>\n</tr>\n<tr>\n<td>-11</td>\n<td>1000  1011</td>\n<td>1111 0100</td>\n<td>1111 0101</td>\n</tr>\n</tbody>\n</table>\n<p>注:负数的补码为反码加1,  正数的 原码、反码、补码都相同</p>\n<h5 id=\"知识细节\"><a href=\"#知识细节\" class=\"headerlink\" title=\"知识细节\"></a>知识细节</h5><ul>\n<li><p>有符号数同一表示形式下，负数的表示范围 比正数的范围大1  </p>\n<p>同一位数：补码的范围不对称，|TMin|=|TMax|+1；                                                                                                                                  同一位数：最大的无符号数比有符号数的两倍多1，即：UMax = 2TMax + 1​                </p>\n</li>\n<li><p>对于大多数C语言，处理同样字长的有符号数和无符号数规则：数值可能改变，但位模式不变</p>\n</li>\n</ul>\n<p>​    eg：short v = -12345;    unsigned short  uv = (unsigned short) v;     uv=53191  这里-12345的16位补码和53191的16位编码相同</p>\n<p>​    无符号数和有符号数之间的转换规则：T–&gt;U:补码转化为无符号数       U–&gt;T:无符号数转化为补码</p>\n<p>​    参与运算时，如果有无符号数出现在同一表达式，则有符号数强制转化为无符号数​                                                      </p>\n<ul>\n<li><p>扩展一个数字的位表示：无符号数零扩展，补码数(有符号数)符号扩展​                                                        </p>\n</li>\n<li><p>截断无符号数：丢弃高位取地位；  截断有符号数：截断后将最高位转化为符号位​                                                    </p>\n</li>\n</ul>\n<h4 id=\"整数运算\"><a href=\"#整数运算\" class=\"headerlink\" title=\"整数运算\"></a>整数运算</h4><h5 id=\"有符号数和无符号数转换的基本原则：\"><a href=\"#有符号数和无符号数转换的基本原则：\" class=\"headerlink\" title=\"有符号数和无符号数转换的基本原则：\"></a>有符号数和无符号数转换的基本原则：</h5><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"ruby\">位模式不变</span></span><br><span class=\"line\"><span class=\"ruby\"></span></span><br><span class=\"line\"><span class=\"ruby\">-重新解读（按目标编码类型的规则解读）</span></span><br><span class=\"line\"><span class=\"ruby\"></span></span><br><span class=\"line\"><span class=\"ruby\">-会有意外的副作用：数值被 + 或 -$2^w$</span></span><br><span class=\"line\"><span class=\"ruby\"></span></span><br><span class=\"line\"><span class=\"ruby\">-当表达式中有符号数和无符号数混合时，有符号数转化为无符号数</span></span><br></pre></td></tr></table></figure>\n<p>加法:    无/有符号数的加法：正常加法后再截断，位级的运算相同</p>\n<p>​        无符号数：加后对$2^w$求模</p>\n<h5 id=\"符号位扩展\"><a href=\"#符号位扩展\" class=\"headerlink\" title=\"符号位扩展\"></a>符号位扩展</h5><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-无符号数：填充<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">-有符号位：符号扩展</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\teg：<span class=\"number\">-15213</span>    二进制：<span class=\"number\">11000100</span> <span class=\"number\">10010011</span>  ---&gt; <span class=\"number\">11111111</span> <span class=\"number\">11111111</span> <span class=\"number\">11000100</span> <span class=\"number\">10010011</span></span><br><span class=\"line\"></span><br><span class=\"line\">-结果都是明确的预期值</span><br></pre></td></tr></table></figure>\n<h5 id=\"截断\"><a href=\"#截断\" class=\"headerlink\" title=\"截断\"></a>截断</h5><figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-无论有无符号数，多出的位数都被截断</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-结果重新解读</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-无符号数: 相当于求模运算</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-有符号数：和求模运算相似</span></span><br></pre></td></tr></table></figure>\n<p>​    -对于小整数，结果是明确的预期值</p>\n<h5 id=\"检测无符号数加法中的溢出：\"><a href=\"#检测无符号数加法中的溢出：\" class=\"headerlink\" title=\"检测无符号数加法中的溢出：\"></a>检测无符号数加法中的溢出：</h5><p>​    s =x+y,当且仅当s &lt; x(或等价的s &lt; y)时发生了溢出</p>\n<p>​    无符号数逆元（求反）：x=0时：-x=0</p>\n<p>​                   x &gt; 0时: -x = $2^w$</p>\n<h5 id=\"补码加法：\"><a href=\"#补码加法：\" class=\"headerlink\" title=\"补码加法：\"></a>补码加法：</h5><p>对于-$2^{w-1}\\le,y\\le2^{w-1}$-1的整数x和y，有<br>$$<br>\\begin{equation}x+^t_wy=\\begin{cases}x+y-2^w&amp; 2^{w-1}\\le{x+y} &amp; 正溢出\\x+y &amp; -2^{w-1}\\le{x+y}&lt;2^{w-1} &amp; 正常\\x+y+2^w &amp; x+y&lt;-2^{w-1} &amp; 负溢出\\end{cases}\\end{equation}<br>$$<br>​     对于满足TMi$n_w\\le$x,y$\\le$TMax$_w$的和y，令s=x+y,当且仅当x &gt; 0,y &gt; 0但s$\\le$0时发生了正溢出；当且仅当x &lt; 0,y &lt; 0但s$\\geq$0时发生了正溢出  </p>\n<h5 id=\"补码的非\"><a href=\"#补码的非\" class=\"headerlink\" title=\"补码的非\"></a>补码的非</h5><p>对满足$TMin_w\\le x\\le TMax_w$    的$x$，其补码的非$-^t_wx$由下式给出：<br>$$<br>\\begin{equation}-^t_wx=\\begin{cases}TMin_w&amp; x = TMin_w\\-x &amp; x&gt;TMin_w\\end{cases}\\end{equation}<br>$$<br>也就是说，对w位的补码加法来说，$TMin_w$是自己的加法的逆，而对其他的都有$-x$作为其加法的逆</p>\n<h5 id=\"补码非的位级表示\"><a href=\"#补码非的位级表示\" class=\"headerlink\" title=\"补码非的位级表示\"></a>补码非的位级表示</h5><p>​    方法一：对每一位求补，再对结果加1</p>\n<p>​    方法二：找到最右边的第一个1的位置，然后将该位置左边的所有为取反</p>\n<h4 id=\"浮点数\"><a href=\"#浮点数\" class=\"headerlink\" title=\"浮点数\"></a>浮点数</h4><ul>\n<li>IEEE标准：</li>\n</ul>\n<p><img src=\"/img/深入理解计算机系统/浮点数标准分类.PNG\" alt=\"浮点数标准分类\"></p>\n<ul>\n<li>浮点数规格化的值（frac、exp）</li>\n</ul>\n<p><img src=\"/img/深入理解计算机系统/浮点数规格化的值.PNG\" alt=\"浮点数规格化的值\"></p>\n<ul>\n<li><p>对于非规格化值：E=1-Bisas，M=f，不包括隐含的开头的1 <img src=\"/img/深入理解计算机系统/浮点数规格化的值.PNG\" alt=\"浮点数规格化的值\"> </p>\n</li>\n<li><p>舍入</p>\n</li>\n</ul>\n<p><img src=\"/img/深入理解计算机系统/浮点数舍入.PNG\" alt=\"浮点数舍入\"></p>\n<p>​    将float或double转化成int，值将向零舍入                    </p>\n<h3 id=\"程序的机器级表示\"><a href=\"#程序的机器级表示\" class=\"headerlink\" title=\"程序的机器级表示\"></a>程序的机器级表示</h3><h4 id=\"数据格式\"><a href=\"#数据格式\" class=\"headerlink\" title=\"数据格式\"></a>数据格式</h4><p>c数据类型的宽度</p>\n<table>\n<thead>\n<tr>\n<th>c数据类型</th>\n<th>32位</th>\n<th>64位</th>\n<th>x86-64</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>char</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>short</td>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n</tr>\n<tr>\n<td>int</td>\n<td>4</td>\n<td>4</td>\n<td>4</td>\n</tr>\n<tr>\n<td>long</td>\n<td>4</td>\n<td>8</td>\n<td>8</td>\n</tr>\n<tr>\n<td>float</td>\n<td>4</td>\n<td>4</td>\n<td>4</td>\n</tr>\n<tr>\n<td>double</td>\n<td>8</td>\n<td>8</td>\n<td>8</td>\n</tr>\n<tr>\n<td>long double</td>\n<td>-</td>\n<td>-</td>\n<td>10/16</td>\n</tr>\n<tr>\n<td>pointer</td>\n<td>4</td>\n<td>8</td>\n<td>8</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"访问信息\"><a href=\"#访问信息\" class=\"headerlink\" title=\"访问信息\"></a>访问信息</h4><ul>\n<li><p>常规的movq指令只能以表示为32位补码数字的立即数作为源操作数，然后把这个值符号扩展到64位的值放大目的位置；</p>\n</li>\n<li><p>MOVZ类中的指令把目的中剩余的字节填充为0，而MOVS类中的指令通过符号扩展来填充，把源操作数的最高位进行复制。</p>\n</li>\n</ul>\n<p>​    MOVZ类（零扩展）的指令：以寄存器或地址内存作为源，以寄存器作为目的；</p>\n<p>​    MOVS类（符号扩展）的指令：以寄存器或地址内存作为源，以寄存器作为目的；cltq指令无操作数：只作用于%eax和%rax</p>\n<h4 id=\"算术和逻辑操作\"><a href=\"#算术和逻辑操作\" class=\"headerlink\" title=\"算术和逻辑操作\"></a>算术和逻辑操作</h4><p><img src=\"/img/深入理解计算机系统/算术和逻辑操作指令.PNG\" alt=\"算术和逻辑操作指令\"></p>\n<p>（1）leap指令目的操作数必须是寄存器</p>\n<p>（2）左移指令有两个：SAL和SHL，两者效果一样，都是右边补0；右移指令不同，SAR执行算术移位，补充符号位，而SHR执行逻辑移位，补充0</p>\n<p>（3）特殊的算术操作</p>\n<p><img src=\"/img/深入理解计算机系统/特殊的操作指令.PNG\" alt=\"特殊的操作指令\"></p>\n<p>有符号除法指令 idivl 将%rdx高64位和%rax低64位中的128位作为被除数，而除数作为指令的操作数给出。指令将商存储在%rax，余数存储在%rdx</p>\n<p>cqto指令可以不需要操作数，隐含读出%rax的符号位并将其复制到%rdx的每一位</p>\n<h4 id=\"控制\"><a href=\"#控制\" class=\"headerlink\" title=\"控制\"></a>控制</h4><p>（1）leaq指令不改变条件码</p>\n<p>（2）CMP指令和TEST指令只改变条件码，前者基于sub，后者基于and</p>\n<p>（3）条件码通常不会直接读取，常用使用方法：</p>\n<p>​    a、根据条件码的某种组合将一个字节设置为0或1（即set指令）</p>\n<p>​    b、条件跳转到程序的某个其他部分</p>\n<p>​    c、有条件的传送数据</p>\n<p>（4）set指令：</p>\n<p><img src=\"/img/深入理解计算机系统/set指令.PNG\" alt=\"set指令\"></p>\n<h4 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h4><p> （1）传递控制、传递数据、分配和释放内存</p>\n<p><img src=\"/img/深入理解计算机系统/栈结构.PNG\" alt=\"栈结构\"></p>\n<p>（2）调用函数前，把所有的参数都先存储，包括形参，存储完毕才开始调用函数</p>\n<p>（3）栈上的局部变量（局部数据必须用主存的情况)</p>\n<p>​    1）寄存器不足够存放所有的本地数据</p>\n<p>​    2）对一个局部变量使用取址符&amp;，因此必须为其产生一个地址</p>\n<p>​    3）某些局部变量是数组或结构，因此必须通过数组或结构引用访问到。</p>\n<p>注：寄存器是唯一被所有过程共享的资源</p>\n<h4 id=\"对抗缓冲区溢出\"><a href=\"#对抗缓冲区溢出\" class=\"headerlink\" title=\"对抗缓冲区溢出\"></a>对抗缓冲区溢出</h4><p>方法：1、栈随机化 ；2、栈破坏检测 ；3、限制可执行代码区域</p>\n<h4 id=\"过程中的浮点代码\"><a href=\"#过程中的浮点代码\" class=\"headerlink\" title=\"过程中的浮点代码\"></a>过程中的浮点代码</h4><ul>\n<li><p>XMM寄存器8xmn0~ 8xmm7最多可以传递8个浮点参数。按照参数列出的顺序使用这些寄存器。可以通过栈传递额外的浮点参数。</p>\n</li>\n<li><p>函数使用寄存器%xmm0来返回浮点值。</p>\n</li>\n<li><p>所有的XMM寄存器都是调用者保存的。被调用者可以不用保存就覆盖这些寄存器<br>中任意一个。</p>\n<p>| 单精度 | 双精度 | 效果   | 描述                    |<br>| —— | —— | —— | ———————– |<br>| vxorps | vorpd  | D&lt;-x*y | 位级异或（EXCLUSIVE-OR) |<br>| vandps | andpd  | D&lt;-x&amp;y | 位级与（AND）           |</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>基于</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ucomiss x,y</td>\n<td>y-x</td>\n<td>比较单精度值</td>\n</tr>\n<tr>\n<td>ucomisd x,y</td>\n<td>y-x</td>\n<td>比较双精度值</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"处理器体系结构\"><a href=\"#处理器体系结构\" class=\"headerlink\" title=\"处理器体系结构\"></a>处理器体系结构</h3><p>1、程序计数器PC保存当前正在执行指令的地址</p>\n<p>2、内存从概念上来说就是一个很大的字节数组，保存着程序和数据。Y86-64程序用虚拟地址来引用内存位置。硬件和操作系统软件联合起来将虚拟地址翻译成实际或物理地址</p>\n<p>3、Y86-64每条指令需要1~10个字节不等，每条指令的第一个字节表明指令的类型，这个字节分为两部分，每部分4位：高四位是代码部分，低四位是指令部分。功能值只有在一组相关指令共用一个代码时才有用。</p>\n<p>4、指令集的一个重要性质就是每个字节编码必须有唯一的解释</p>\n<p>5、时钟寄存器：存储单个字：PC、条件代码和程序状态Stat                                                                                                                  随机访问存储器：存储多个字</p>\n<p>6、指令处理：</p>\n<p>取指、译码、执行、访存、写回、更新PC</p>\n<p>7、SEQ的实现包括组合逻辑和两种存储设备：时钟寄存器和随机访问寄存器。四个硬件单元对时序控制：程序计数器、条件码寄存器、数据内存和寄存器文件，通过时钟信号控制。</p>\n<p>8、组织原则：从不读回，即处理器从来不需要为了完成一条指令的执行而去读由该指令更新了的状态。</p>\n<p>9、每个周期开始前，状态单元（PC、条件码、数据内存、寄存器文件）是根据前一条指令设置的。信号传播通过组合逻辑，创建出新的状态单元的值。</p>\n<h3 id=\"优化程序性能\"><a href=\"#优化程序性能\" class=\"headerlink\" title=\"优化程序性能\"></a>优化程序性能</h3><ul>\n<li><p>程序性能标准：每元素的周期数CPE</p>\n</li>\n<li><p>优化方法：</p>\n<p>1、消除循环低效率：代码移动：</p>\n<p>2、减少过程调用</p>\n<p>3、消除不必要的内存引用</p>\n<p>4、循环展开：减少迭代次数</p>\n<p>5、提高并行性：多个累计变量并行求、重新结合变换</p>\n</li>\n<li><p>课本总结：</p>\n<p>1）高级设计：算法和数据结构</p>\n<p>2）基本编码原则：</p>\n<ul>\n<li><p>消除连续的函数调用：将计算移动到循环外</p>\n</li>\n<li><p>消除不必要的内存引用：引用临时变量保存中间结果，最后结果得出才放入数组或全局变量</p>\n</li>\n</ul>\n<p>3）低级优化：</p>\n<ul>\n<li><p>展开循环，降低开销，并且使进一步优化成为可能</p>\n</li>\n<li><p>通过使用例如多个累积变量和重新结合等技术，提高指令集并行</p>\n</li>\n<li><p>用功能性的风格重写条件操作，使得编译采用条件数据传送</p>\n</li>\n</ul>\n</li>\n<li><p>限制因素：</p>\n<p>1、寄存器溢出</p>\n<p>2、分支预测错误和预测错误处罚：不过分关心可预测的分支、书写适合条件传送的代码</p>\n</li>\n</ul>\n<h3 id=\"存储器层次结构\"><a href=\"#存储器层次结构\" class=\"headerlink\" title=\"存储器层次结构\"></a>存储器层次结构</h3><h4 id=\"存储技术\"><a href=\"#存储技术\" class=\"headerlink\" title=\"存储技术\"></a>存储技术</h4><h5 id=\"随机访问存储器\"><a href=\"#随机访问存储器\" class=\"headerlink\" title=\"随机访问存储器\"></a>随机访问存储器</h5><p>随机访问存储器分（RAM）为两类：静态SRAM（更快）和动态DRAM</p>\n<p>（1）静态（SRAM）</p>\n<p>SRAM将每个位存储在一个双稳态的存储器单元，每个单元由一个六晶体管电路实现，可无限期保持在两个不同的电压配置或状态之一</p>\n<p>（2）动态（DRAM）</p>\n<p>DRAM将每个位存储为对一个电容的充电，对干扰敏感且不能恢复</p>\n<p>对比：</p>\n<p><img src=\"/img/深入理解计算机系统/SRAM和DRAM对比.PNG\" alt=\"SRAM和DRAM对比\"></p>\n<p>（3）传统的DRAM</p>\n<p>DRAM芯片中的单元（位）被分成d个超单元，每个超单元由w个DRAM单元组成，一个d*w的DRAM存储了dw位信息。超单元被组织成r行c列的矩阵，rc=d。</p>\n<p>每个超单元存储一个字节</p>\n<p>(4)内存模块</p>\n<p>–DRAM芯片封装在内存模块中，插到主板的扩展槽上</p>\n<p>–内存地址A取值过程：</p>\n<p><img src=\"/img/深入理解计算机系统/6.1.1内存地址取值.PNG\" alt=\"6.1.1内存地址取值\"></p>\n<p>（5）增强的DRAM</p>\n<p>快页模式DRAM、扩展数据输出DRAM、同步DRAM、双倍数据速率同步DRAM、视频RAM</p>\n<p>（6）非易失性存储器</p>\n<p>ROM</p>\n<p>（7）访问主存</p>\n<p>总线：能够携带地址、数据和控制信号，分为：系统总线和内存总线</p>\n<h5 id=\"磁盘存储\"><a href=\"#磁盘存储\" class=\"headerlink\" title=\"磁盘存储\"></a>磁盘存储</h5><p>磁盘读取时间计算：</p>\n<p><img src=\"/img/深入理解计算机系统/磁盘读取时间计算.PNG\" alt=\"磁盘读取时间计算\"></p>\n<h4 id=\"局部性\"><a href=\"#局部性\" class=\"headerlink\" title=\"局部性\"></a>局部性</h4><p>   (1)重复引用相同局部变量的程序具有良好的时间局部性</p>\n<p>（2）步长越小，空间局部性越好</p>\n<p>（3）对于取值指令，循环具有良好的时间和空间局部性，循环体越小，循环迭代次数越多，局部性越好</p>\n<h4 id=\"存储器层次结构-1\"><a href=\"#存储器层次结构-1\" class=\"headerlink\" title=\"存储器层次结构\"></a>存储器层次结构</h4><p>存储器层次结构</p>\n<p><img src=\"/img/深入理解计算机系统/存储器层次结构.PNG\" alt=\"存储器层次结构\"></p>\n<h4 id=\"高速缓存存储器\"><a href=\"#高速缓存存储器\" class=\"headerlink\" title=\"高速缓存存储器\"></a>高速缓存存储器</h4><p>缓存不命中：</p>\n<ul>\n<li><p>冷不命中（强制性不命中）：</p>\n<p>k层缓存有空行，程序最开始运行时均为冷不命中</p>\n</li>\n<li><p>冲突不命中</p>\n<p>k层中没有空行 </p>\n</li>\n<li><p>容量不命中</p>\n</li>\n</ul>\n<p>组相连高速缓存、组相连高速缓存、全相连高速缓存</p>\n<h4 id=\"编写高速缓存存储器\"><a href=\"#编写高速缓存存储器\" class=\"headerlink\" title=\"编写高速缓存存储器\"></a>编写高速缓存存储器</h4><p>写命中：</p>\n<p>直写：高速缓存中更新的数据立即写回到低一层中</p>\n<p>写回：尽可能推迟更新，当替换算法要驱逐这个更新过的块时，才把它写到紧接着的低一层中</p>\n<p>写不命中：</p>\n<p>写分配：加载相应的低一层的块到高速缓存中，然后更新这个高速缓存块</p>\n<p>非写分配：避开高速缓存，直接把这个字写到低一层中</p>\n<p>**直写高速缓存通常时写分配的，写回高速缓存通常是非写分配的</p>\n<h4 id=\"综合：高速缓存对程序性能的影响\"><a href=\"#综合：高速缓存对程序性能的影响\" class=\"headerlink\" title=\"综合：高速缓存对程序性能的影响\"></a>综合：高速缓存对程序性能的影响</h4><p>如果一个高速缓存的块大小为B字节，那么一个步长为k（字）的引用模式平均每次循环迭代会有min（1，（wordsize*k)/k））次缓存不命中</p>\n<h3 id=\"异常控制流\"><a href=\"#异常控制流\" class=\"headerlink\" title=\"异常控制流\"></a>异常控制流</h3><h4 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h4><p>（1）异常是控制流中的突变，用来响应处理器状态中的变化。是异常控制流的一种形式，一部分由硬件实现，一部分由操作系统实现</p>\n<p>（2）事件处理：</p>\n<p><img src=\"/img/深入理解计算机系统/8.1事件处理.PNG\" alt=\"8.1事件处理\"></p>\n<p>（3）异常分类</p>\n<p><img src=\"/img/深入理解计算机系统/异常分类.PNG\" alt=\"异常分类\"></p>\n<p><img src=\"/img/深入理解计算机系统/异常分类2.PNG\" alt=\"异常分类2\"></p>\n<h4 id=\"进程\"><a href=\"#进程\" class=\"headerlink\" title=\"进程\"></a>进程</h4><p>进程：一个执行中程序的实例。系统中每个程序都运行在某个进程的上下文中。上下文是由程序正确运行所需的状态组成</p>\n<p>进程提供的关键抽象：</p>\n<p>一个独立的逻辑控制流、一个私有的地址空间</p>\n<ul>\n<li><p>并发流：一个逻辑流的执行在时间上与另一个流重叠，称为并发流，这两个流被称为并发的运行。多个流并发地执行一般现象被称为并发。一个进程和其他进程轮流运行的概念称为多任务。一个进程执行它的控制流的一部分的每一时间段叫做时间片，因此，多任务也叫时间分片。</p>\n</li>\n<li><p>如果两个流并发的运行在不同的处理器核或计算机上，那么我们称它们为并行流，它们并行地运行，且并行地执行</p>\n</li>\n<li><p>进程地址空间</p>\n<p><img src=\"/img/深入理解计算机系统/进程地址空间.PNG\" alt=\"进程地址空间\"></p>\n</li>\n<li><p>用户模式和内核模式：进程从用户模式切换到内核模式的唯一方式是异常</p>\n</li>\n<li><p>上下文切换：</p>\n<p>1）保存当前进程的上下文；  2）恢复某个先前被抢占的进程被保存的上下文； 3）将控制传递给这个新恢复的进程</p>\n</li>\n</ul>\n<h4 id=\"进程控制\"><a href=\"#进程控制\" class=\"headerlink\" title=\"进程控制\"></a>进程控制</h4><ul>\n<li>进程的三种状态：</li>\n</ul>\n<p>运行：进程要么被执行，要么等待被执行且被内核调度</p>\n<p>停止：进程的执行被挂起，且不会被调度。当收到SIGSTOP 、SIGTSTP、SIGTTIN、SIGTOUT信号时，进程停止，并且保持到收到SIGCOUT信号</p>\n<p>终止：1）收到一个信号，该信号的默认行为是终止；2）从主程序返回；3）调用exit函数</p>\n<ul>\n<li>父进程和子进程最大的区别是PID不同。</li>\n</ul>\n<p>fork被调用一次，返回两次。一次是在父进程中，fork返回子进程的PID，一次是在新建的子进程中，返回0；</p>\n<ul>\n<li><p>子进程和父进程：</p>\n<p>1）fork函数调用一次，返回两次；2）子进程和父进程并发运行；3）相同但是独立的地址空间；4）共享文件</p>\n</li>\n<li><p>pid_t wait_pid(int *statusp) : 如果成功，返回子进程的PID；如果WNOHANG，返回0；如果其他错误，返回-1</p>\n</li>\n<li><p>unsigned int sleep(unsigned int secs)：返回还要休眠的秒数</p>\n</li>\n<li><p>int pause(void)：总是返回-1，让函数休眠，直到该进程接收到另一个信号</p>\n</li>\n<li><p>execve:在当前进程的上下文中加载并运行一个新程序，从不返回，（如果找不到filename，才会返回到调用程序）。</p>\n</li>\n</ul>\n<h4 id=\"编写信号处理程序\"><a href=\"#编写信号处理程序\" class=\"headerlink\" title=\"编写信号处理程序\"></a>编写信号处理程序</h4><p>1、安全的信号处理</p>\n<p>（1）处理程序要尽可能的简单</p>\n<p>（2）在处理程序中只调用异步信号安全的函数</p>\n<p>（3）保存和恢复errno</p>\n<p>（4）阻塞所有信号，保护对共享数据结构的访问</p>\n<p>（5）用volatile声明全局变量</p>\n<p>（6）用sig_atomic_t声明标志</p>\n<p>2、正确的信号处理：未处理的信号不排队</p>\n<p>3、可移植的信号处理</p>\n<p>由于本人有一丢丢懒~，漏掉的一些内容懒得更新，排版也只是凑合，还请大家原谅啦啦—–</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjsvfd8h30004hwu34qntwttv","tag_id":"cjsvfd8ha0005hwu38ua4w623","_id":"cjsvfd8he0007hwu3uw7tq37o"},{"post_id":"cjsvfd8h30004hwu34qntwttv","tag_id":"cjsvfd8hd0006hwu3pd66c0gw","_id":"cjsvfd8hf0008hwu3zh4pt5aj"}],"Tag":[{"name":"计算机系统","_id":"cjsvfd8ha0005hwu38ua4w623"},{"name":"期末复习","_id":"cjsvfd8hd0006hwu3pd66c0gw"}]}}